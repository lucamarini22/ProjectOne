#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectOneWPF
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Project-One")]
	public partial class DataBaseDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void InsertASTRONAUT(ASTRONAUT instance);
    partial void UpdateASTRONAUT(ASTRONAUT instance);
    partial void DeleteASTRONAUT(ASTRONAUT instance);
    partial void InsertEMPLOYEE(EMPLOYEE instance);
    partial void UpdateEMPLOYEE(EMPLOYEE instance);
    partial void DeleteEMPLOYEE(EMPLOYEE instance);
    partial void InsertPARTICIPATION(PARTICIPATION instance);
    partial void UpdatePARTICIPATION(PARTICIPATION instance);
    partial void DeletePARTICIPATION(PARTICIPATION instance);
    partial void InsertBLACK_HOLE(BLACK_HOLE instance);
    partial void UpdateBLACK_HOLE(BLACK_HOLE instance);
    partial void DeleteBLACK_HOLE(BLACK_HOLE instance);
    partial void InsertCONSTELLATION(CONSTELLATION instance);
    partial void UpdateCONSTELLATION(CONSTELLATION instance);
    partial void DeleteCONSTELLATION(CONSTELLATION instance);
    partial void InsertDELIVER_IN_ORBIT(DELIVER_IN_ORBIT instance);
    partial void UpdateDELIVER_IN_ORBIT(DELIVER_IN_ORBIT instance);
    partial void DeleteDELIVER_IN_ORBIT(DELIVER_IN_ORBIT instance);
    partial void InsertDISCOVER(DISCOVER instance);
    partial void UpdateDISCOVER(DISCOVER instance);
    partial void DeleteDISCOVER(DISCOVER instance);
    partial void InsertGALAXY(GALAXY instance);
    partial void UpdateGALAXY(GALAXY instance);
    partial void DeleteGALAXY(GALAXY instance);
    partial void InsertHANGAR(HANGAR instance);
    partial void UpdateHANGAR(HANGAR instance);
    partial void DeleteHANGAR(HANGAR instance);
    partial void InsertLAB(LAB instance);
    partial void UpdateLAB(LAB instance);
    partial void DeleteLAB(LAB instance);
    partial void InsertLAUNCH_SITE(LAUNCH_SITE instance);
    partial void UpdateLAUNCH_SITE(LAUNCH_SITE instance);
    partial void DeleteLAUNCH_SITE(LAUNCH_SITE instance);
    partial void InsertMEMBERSHIP(MEMBERSHIP instance);
    partial void UpdateMEMBERSHIP(MEMBERSHIP instance);
    partial void DeleteMEMBERSHIP(MEMBERSHIP instance);
    partial void InsertMOON(MOON instance);
    partial void UpdateMOON(MOON instance);
    partial void DeleteMOON(MOON instance);
    partial void InsertPLANET(PLANET instance);
    partial void UpdatePLANET(PLANET instance);
    partial void DeletePLANET(PLANET instance);
    partial void InsertRECONNAISSANCE(RECONNAISSANCE instance);
    partial void UpdateRECONNAISSANCE(RECONNAISSANCE instance);
    partial void DeleteRECONNAISSANCE(RECONNAISSANCE instance);
    partial void InsertROBOT(ROBOT instance);
    partial void UpdateROBOT(ROBOT instance);
    partial void DeleteROBOT(ROBOT instance);
    partial void InsertROCKET(ROCKET instance);
    partial void UpdateROCKET(ROCKET instance);
    partial void DeleteROCKET(ROCKET instance);
    partial void InsertSATELLITE(SATELLITE instance);
    partial void UpdateSATELLITE(SATELLITE instance);
    partial void DeleteSATELLITE(SATELLITE instance);
    partial void InsertSIMULATION(SIMULATION instance);
    partial void UpdateSIMULATION(SIMULATION instance);
    partial void DeleteSIMULATION(SIMULATION instance);
    partial void InsertSPACE_STATION(SPACE_STATION instance);
    partial void UpdateSPACE_STATION(SPACE_STATION instance);
    partial void DeleteSPACE_STATION(SPACE_STATION instance);
    partial void InsertSPACECRAFT(SPACECRAFT instance);
    partial void UpdateSPACECRAFT(SPACECRAFT instance);
    partial void DeleteSPACECRAFT(SPACECRAFT instance);
    partial void InsertSTAR(STAR instance);
    partial void UpdateSTAR(STAR instance);
    partial void DeleteSTAR(STAR instance);
    partial void InsertTEAM(TEAM instance);
    partial void UpdateTEAM(TEAM instance);
    partial void DeleteTEAM(TEAM instance);
    #endregion
		
		public DataBaseDataClassesDataContext() : 
				base(global::ProjectOneWPF.Properties.Settings.Default.Project_OneConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ASTRONAUT> ASTRONAUTs
		{
			get
			{
				return this.GetTable<ASTRONAUT>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this.GetTable<EMPLOYEE>();
			}
		}
		
		public System.Data.Linq.Table<PARTICIPATION> PARTICIPATIONs
		{
			get
			{
				return this.GetTable<PARTICIPATION>();
			}
		}
		
		public System.Data.Linq.Table<BLACK_HOLE> BLACK_HOLEs
		{
			get
			{
				return this.GetTable<BLACK_HOLE>();
			}
		}
		
		public System.Data.Linq.Table<CONSTELLATION> CONSTELLATIONs
		{
			get
			{
				return this.GetTable<CONSTELLATION>();
			}
		}
		
		public System.Data.Linq.Table<DELIVER_IN_ORBIT> DELIVER_IN_ORBITs
		{
			get
			{
				return this.GetTable<DELIVER_IN_ORBIT>();
			}
		}
		
		public System.Data.Linq.Table<DISCOVER> DISCOVERs
		{
			get
			{
				return this.GetTable<DISCOVER>();
			}
		}
		
		public System.Data.Linq.Table<GALAXY> GALAXies
		{
			get
			{
				return this.GetTable<GALAXY>();
			}
		}
		
		public System.Data.Linq.Table<HANGAR> HANGARs
		{
			get
			{
				return this.GetTable<HANGAR>();
			}
		}
		
		public System.Data.Linq.Table<LAB> LABs
		{
			get
			{
				return this.GetTable<LAB>();
			}
		}
		
		public System.Data.Linq.Table<LAUNCH_SITE> LAUNCH_SITEs
		{
			get
			{
				return this.GetTable<LAUNCH_SITE>();
			}
		}
		
		public System.Data.Linq.Table<MEMBERSHIP> MEMBERSHIPs
		{
			get
			{
				return this.GetTable<MEMBERSHIP>();
			}
		}
		
		public System.Data.Linq.Table<MOON> MOONs
		{
			get
			{
				return this.GetTable<MOON>();
			}
		}
		
		public System.Data.Linq.Table<PLANET> PLANETs
		{
			get
			{
				return this.GetTable<PLANET>();
			}
		}
		
		public System.Data.Linq.Table<RECONNAISSANCE> RECONNAISSANCEs
		{
			get
			{
				return this.GetTable<RECONNAISSANCE>();
			}
		}
		
		public System.Data.Linq.Table<ROBOT> ROBOTs
		{
			get
			{
				return this.GetTable<ROBOT>();
			}
		}
		
		public System.Data.Linq.Table<ROCKET> ROCKETs
		{
			get
			{
				return this.GetTable<ROCKET>();
			}
		}
		
		public System.Data.Linq.Table<SATELLITE> SATELLITEs
		{
			get
			{
				return this.GetTable<SATELLITE>();
			}
		}
		
		public System.Data.Linq.Table<SIMULATION> SIMULATIONs
		{
			get
			{
				return this.GetTable<SIMULATION>();
			}
		}
		
		public System.Data.Linq.Table<SPACE_STATION> SPACE_STATIONs
		{
			get
			{
				return this.GetTable<SPACE_STATION>();
			}
		}
		
		public System.Data.Linq.Table<SPACECRAFT> SPACECRAFTs
		{
			get
			{
				return this.GetTable<SPACECRAFT>();
			}
		}
		
		public System.Data.Linq.Table<STAR> STARs
		{
			get
			{
				return this.GetTable<STAR>();
			}
		}
		
		public System.Data.Linq.Table<TEAM> TEAMs
		{
			get
			{
				return this.GetTable<TEAM>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASTRONAUT")]
	public partial class ASTRONAUT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Astronaut;
		
		private string _Astronaut_Name;
		
		private string _Astronaut_Surname;
		
		private System.DateTime _Date_Of_Birth;
		
		private string _Country_Of_Birth;
		
		private EntitySet<PARTICIPATION> _PARTICIPATIONs;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AstronautChanging(int value);
    partial void OnID_AstronautChanged();
    partial void OnAstronaut_NameChanging(string value);
    partial void OnAstronaut_NameChanged();
    partial void OnAstronaut_SurnameChanging(string value);
    partial void OnAstronaut_SurnameChanged();
    partial void OnDate_Of_BirthChanging(System.DateTime value);
    partial void OnDate_Of_BirthChanged();
    partial void OnCountry_Of_BirthChanging(string value);
    partial void OnCountry_Of_BirthChanged();
    #endregion
		
		public ASTRONAUT()
		{
			this._PARTICIPATIONs = new EntitySet<PARTICIPATION>(new Action<PARTICIPATION>(this.attach_PARTICIPATIONs), new Action<PARTICIPATION>(this.detach_PARTICIPATIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Astronaut", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Astronaut
		{
			get
			{
				return this._ID_Astronaut;
			}
			set
			{
				if ((this._ID_Astronaut != value))
				{
					this.OnID_AstronautChanging(value);
					this.SendPropertyChanging();
					this._ID_Astronaut = value;
					this.SendPropertyChanged("ID_Astronaut");
					this.OnID_AstronautChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Astronaut_Name", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Astronaut_Name
		{
			get
			{
				return this._Astronaut_Name;
			}
			set
			{
				if ((this._Astronaut_Name != value))
				{
					this.OnAstronaut_NameChanging(value);
					this.SendPropertyChanging();
					this._Astronaut_Name = value;
					this.SendPropertyChanged("Astronaut_Name");
					this.OnAstronaut_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Astronaut_Surname", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Astronaut_Surname
		{
			get
			{
				return this._Astronaut_Surname;
			}
			set
			{
				if ((this._Astronaut_Surname != value))
				{
					this.OnAstronaut_SurnameChanging(value);
					this.SendPropertyChanging();
					this._Astronaut_Surname = value;
					this.SendPropertyChanged("Astronaut_Surname");
					this.OnAstronaut_SurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Of_Birth", DbType="Date NOT NULL")]
		public System.DateTime Date_Of_Birth
		{
			get
			{
				return this._Date_Of_Birth;
			}
			set
			{
				if ((this._Date_Of_Birth != value))
				{
					this.OnDate_Of_BirthChanging(value);
					this.SendPropertyChanging();
					this._Date_Of_Birth = value;
					this.SendPropertyChanged("Date_Of_Birth");
					this.OnDate_Of_BirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Of_Birth", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Country_Of_Birth
		{
			get
			{
				return this._Country_Of_Birth;
			}
			set
			{
				if ((this._Country_Of_Birth != value))
				{
					this.OnCountry_Of_BirthChanging(value);
					this.SendPropertyChanging();
					this._Country_Of_Birth = value;
					this.SendPropertyChanged("Country_Of_Birth");
					this.OnCountry_Of_BirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ASTRONAUT_PARTICIPATION", Storage="_PARTICIPATIONs", ThisKey="ID_Astronaut", OtherKey="ID_Astronaut")]
		public EntitySet<PARTICIPATION> PARTICIPATIONs
		{
			get
			{
				return this._PARTICIPATIONs;
			}
			set
			{
				this._PARTICIPATIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PARTICIPATIONs(PARTICIPATION entity)
		{
			this.SendPropertyChanging();
			entity.ASTRONAUT = this;
		}
		
		private void detach_PARTICIPATIONs(PARTICIPATION entity)
		{
			this.SendPropertyChanging();
			entity.ASTRONAUT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEE")]
	public partial class EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Employee;
		
		private string _Employee_Name;
		
		private string _Employee_Surname;
		
		private System.DateTime _Date_Of_Birth;
		
		private string _Country_Of_Birth;
		
		private EntitySet<MEMBERSHIP> _MEMBERSHIPs;
		
		private EntitySet<TEAM> _TEAMs;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_EmployeeChanging(int value);
    partial void OnID_EmployeeChanged();
    partial void OnEmployee_NameChanging(string value);
    partial void OnEmployee_NameChanged();
    partial void OnEmployee_SurnameChanging(string value);
    partial void OnEmployee_SurnameChanged();
    partial void OnDate_Of_BirthChanging(System.DateTime value);
    partial void OnDate_Of_BirthChanged();
    partial void OnCountry_Of_BirthChanging(string value);
    partial void OnCountry_Of_BirthChanged();
    #endregion
		
		public EMPLOYEE()
		{
			this._MEMBERSHIPs = new EntitySet<MEMBERSHIP>(new Action<MEMBERSHIP>(this.attach_MEMBERSHIPs), new Action<MEMBERSHIP>(this.detach_MEMBERSHIPs));
			this._TEAMs = new EntitySet<TEAM>(new Action<TEAM>(this.attach_TEAMs), new Action<TEAM>(this.detach_TEAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Employee", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Employee
		{
			get
			{
				return this._ID_Employee;
			}
			set
			{
				if ((this._ID_Employee != value))
				{
					this.OnID_EmployeeChanging(value);
					this.SendPropertyChanging();
					this._ID_Employee = value;
					this.SendPropertyChanged("ID_Employee");
					this.OnID_EmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_Name", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Employee_Name
		{
			get
			{
				return this._Employee_Name;
			}
			set
			{
				if ((this._Employee_Name != value))
				{
					this.OnEmployee_NameChanging(value);
					this.SendPropertyChanging();
					this._Employee_Name = value;
					this.SendPropertyChanged("Employee_Name");
					this.OnEmployee_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_Surname", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Employee_Surname
		{
			get
			{
				return this._Employee_Surname;
			}
			set
			{
				if ((this._Employee_Surname != value))
				{
					this.OnEmployee_SurnameChanging(value);
					this.SendPropertyChanging();
					this._Employee_Surname = value;
					this.SendPropertyChanged("Employee_Surname");
					this.OnEmployee_SurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Of_Birth", DbType="Date NOT NULL")]
		public System.DateTime Date_Of_Birth
		{
			get
			{
				return this._Date_Of_Birth;
			}
			set
			{
				if ((this._Date_Of_Birth != value))
				{
					this.OnDate_Of_BirthChanging(value);
					this.SendPropertyChanging();
					this._Date_Of_Birth = value;
					this.SendPropertyChanged("Date_Of_Birth");
					this.OnDate_Of_BirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Of_Birth", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Country_Of_Birth
		{
			get
			{
				return this._Country_Of_Birth;
			}
			set
			{
				if ((this._Country_Of_Birth != value))
				{
					this.OnCountry_Of_BirthChanging(value);
					this.SendPropertyChanging();
					this._Country_Of_Birth = value;
					this.SendPropertyChanged("Country_Of_Birth");
					this.OnCountry_Of_BirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_MEMBERSHIP", Storage="_MEMBERSHIPs", ThisKey="ID_Employee", OtherKey="ID_Employee")]
		public EntitySet<MEMBERSHIP> MEMBERSHIPs
		{
			get
			{
				return this._MEMBERSHIPs;
			}
			set
			{
				this._MEMBERSHIPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_TEAM", Storage="_TEAMs", ThisKey="ID_Employee", OtherKey="ID_Responsible")]
		public EntitySet<TEAM> TEAMs
		{
			get
			{
				return this._TEAMs;
			}
			set
			{
				this._TEAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MEMBERSHIPs(MEMBERSHIP entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = this;
		}
		
		private void detach_MEMBERSHIPs(MEMBERSHIP entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = null;
		}
		
		private void attach_TEAMs(TEAM entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = this;
		}
		
		private void detach_TEAMs(TEAM entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PARTICIPATION")]
	public partial class PARTICIPATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Mission_R;
		
		private int _ID_Astronaut;
		
		private EntityRef<ASTRONAUT> _ASTRONAUT;
		
		private EntityRef<RECONNAISSANCE> _RECONNAISSANCE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Mission_RChanging(int value);
    partial void OnID_Mission_RChanged();
    partial void OnID_AstronautChanging(int value);
    partial void OnID_AstronautChanged();
    #endregion
		
		public PARTICIPATION()
		{
			this._ASTRONAUT = default(EntityRef<ASTRONAUT>);
			this._RECONNAISSANCE = default(EntityRef<RECONNAISSANCE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mission_R", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Mission_R
		{
			get
			{
				return this._ID_Mission_R;
			}
			set
			{
				if ((this._ID_Mission_R != value))
				{
					if (this._RECONNAISSANCE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_Mission_RChanging(value);
					this.SendPropertyChanging();
					this._ID_Mission_R = value;
					this.SendPropertyChanged("ID_Mission_R");
					this.OnID_Mission_RChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Astronaut", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Astronaut
		{
			get
			{
				return this._ID_Astronaut;
			}
			set
			{
				if ((this._ID_Astronaut != value))
				{
					if (this._ASTRONAUT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AstronautChanging(value);
					this.SendPropertyChanging();
					this._ID_Astronaut = value;
					this.SendPropertyChanged("ID_Astronaut");
					this.OnID_AstronautChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ASTRONAUT_PARTICIPATION", Storage="_ASTRONAUT", ThisKey="ID_Astronaut", OtherKey="ID_Astronaut", IsForeignKey=true)]
		public ASTRONAUT ASTRONAUT
		{
			get
			{
				return this._ASTRONAUT.Entity;
			}
			set
			{
				ASTRONAUT previousValue = this._ASTRONAUT.Entity;
				if (((previousValue != value) 
							|| (this._ASTRONAUT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ASTRONAUT.Entity = null;
						previousValue.PARTICIPATIONs.Remove(this);
					}
					this._ASTRONAUT.Entity = value;
					if ((value != null))
					{
						value.PARTICIPATIONs.Add(this);
						this._ID_Astronaut = value.ID_Astronaut;
					}
					else
					{
						this._ID_Astronaut = default(int);
					}
					this.SendPropertyChanged("ASTRONAUT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECONNAISSANCE_PARTICIPATION", Storage="_RECONNAISSANCE", ThisKey="ID_Mission_R", OtherKey="ID_Mission_R", IsForeignKey=true)]
		public RECONNAISSANCE RECONNAISSANCE
		{
			get
			{
				return this._RECONNAISSANCE.Entity;
			}
			set
			{
				RECONNAISSANCE previousValue = this._RECONNAISSANCE.Entity;
				if (((previousValue != value) 
							|| (this._RECONNAISSANCE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RECONNAISSANCE.Entity = null;
						previousValue.PARTICIPATIONs.Remove(this);
					}
					this._RECONNAISSANCE.Entity = value;
					if ((value != null))
					{
						value.PARTICIPATIONs.Add(this);
						this._ID_Mission_R = value.ID_Mission_R;
					}
					else
					{
						this._ID_Mission_R = default(int);
					}
					this.SendPropertyChanged("RECONNAISSANCE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BLACK_HOLE")]
	public partial class BLACK_HOLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Black_Hole;
		
		private string _Black_Hole_Name;
		
		private decimal _Distance_From_Earth_Mantissa;
		
		private decimal _Distance_From_Earth_Exp;
		
		private decimal _Radius;
		
		private decimal _Solar_Mass_Mantissa;
		
		private decimal _Solar_Mass_Exp;
		
		private int _ID_Galaxy;
		
		private System.Nullable<int> _ID_Mission_D;
		
		private EntityRef<DISCOVER> _DISCOVER;
		
		private EntityRef<GALAXY> _GALAXY;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Black_HoleChanging(int value);
    partial void OnID_Black_HoleChanged();
    partial void OnBlack_Hole_NameChanging(string value);
    partial void OnBlack_Hole_NameChanged();
    partial void OnDistance_From_Earth_MantissaChanging(decimal value);
    partial void OnDistance_From_Earth_MantissaChanged();
    partial void OnDistance_From_Earth_ExpChanging(decimal value);
    partial void OnDistance_From_Earth_ExpChanged();
    partial void OnRadiusChanging(decimal value);
    partial void OnRadiusChanged();
    partial void OnSolar_Mass_MantissaChanging(decimal value);
    partial void OnSolar_Mass_MantissaChanged();
    partial void OnSolar_Mass_ExpChanging(decimal value);
    partial void OnSolar_Mass_ExpChanged();
    partial void OnID_GalaxyChanging(int value);
    partial void OnID_GalaxyChanged();
    partial void OnID_Mission_DChanging(System.Nullable<int> value);
    partial void OnID_Mission_DChanged();
    #endregion
		
		public BLACK_HOLE()
		{
			this._DISCOVER = default(EntityRef<DISCOVER>);
			this._GALAXY = default(EntityRef<GALAXY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Black_Hole", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Black_Hole
		{
			get
			{
				return this._ID_Black_Hole;
			}
			set
			{
				if ((this._ID_Black_Hole != value))
				{
					this.OnID_Black_HoleChanging(value);
					this.SendPropertyChanging();
					this._ID_Black_Hole = value;
					this.SendPropertyChanged("ID_Black_Hole");
					this.OnID_Black_HoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Black_Hole_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Black_Hole_Name
		{
			get
			{
				return this._Black_Hole_Name;
			}
			set
			{
				if ((this._Black_Hole_Name != value))
				{
					this.OnBlack_Hole_NameChanging(value);
					this.SendPropertyChanging();
					this._Black_Hole_Name = value;
					this.SendPropertyChanged("Black_Hole_Name");
					this.OnBlack_Hole_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance_From_Earth_Mantissa", DbType="Decimal(10,0) NOT NULL")]
		public decimal Distance_From_Earth_Mantissa
		{
			get
			{
				return this._Distance_From_Earth_Mantissa;
			}
			set
			{
				if ((this._Distance_From_Earth_Mantissa != value))
				{
					this.OnDistance_From_Earth_MantissaChanging(value);
					this.SendPropertyChanging();
					this._Distance_From_Earth_Mantissa = value;
					this.SendPropertyChanged("Distance_From_Earth_Mantissa");
					this.OnDistance_From_Earth_MantissaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance_From_Earth_Exp", DbType="Decimal(3,0) NOT NULL")]
		public decimal Distance_From_Earth_Exp
		{
			get
			{
				return this._Distance_From_Earth_Exp;
			}
			set
			{
				if ((this._Distance_From_Earth_Exp != value))
				{
					this.OnDistance_From_Earth_ExpChanging(value);
					this.SendPropertyChanging();
					this._Distance_From_Earth_Exp = value;
					this.SendPropertyChanged("Distance_From_Earth_Exp");
					this.OnDistance_From_Earth_ExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radius", DbType="Decimal(15,0) NOT NULL")]
		public decimal Radius
		{
			get
			{
				return this._Radius;
			}
			set
			{
				if ((this._Radius != value))
				{
					this.OnRadiusChanging(value);
					this.SendPropertyChanging();
					this._Radius = value;
					this.SendPropertyChanged("Radius");
					this.OnRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Solar_Mass_Mantissa", DbType="Decimal(10,0) NOT NULL")]
		public decimal Solar_Mass_Mantissa
		{
			get
			{
				return this._Solar_Mass_Mantissa;
			}
			set
			{
				if ((this._Solar_Mass_Mantissa != value))
				{
					this.OnSolar_Mass_MantissaChanging(value);
					this.SendPropertyChanging();
					this._Solar_Mass_Mantissa = value;
					this.SendPropertyChanged("Solar_Mass_Mantissa");
					this.OnSolar_Mass_MantissaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Solar_Mass_Exp", DbType="Decimal(3,0) NOT NULL")]
		public decimal Solar_Mass_Exp
		{
			get
			{
				return this._Solar_Mass_Exp;
			}
			set
			{
				if ((this._Solar_Mass_Exp != value))
				{
					this.OnSolar_Mass_ExpChanging(value);
					this.SendPropertyChanging();
					this._Solar_Mass_Exp = value;
					this.SendPropertyChanged("Solar_Mass_Exp");
					this.OnSolar_Mass_ExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Galaxy", DbType="Int NOT NULL")]
		public int ID_Galaxy
		{
			get
			{
				return this._ID_Galaxy;
			}
			set
			{
				if ((this._ID_Galaxy != value))
				{
					if (this._GALAXY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GalaxyChanging(value);
					this.SendPropertyChanging();
					this._ID_Galaxy = value;
					this.SendPropertyChanged("ID_Galaxy");
					this.OnID_GalaxyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mission_D", DbType="Int")]
		public System.Nullable<int> ID_Mission_D
		{
			get
			{
				return this._ID_Mission_D;
			}
			set
			{
				if ((this._ID_Mission_D != value))
				{
					if (this._DISCOVER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_Mission_DChanging(value);
					this.SendPropertyChanging();
					this._ID_Mission_D = value;
					this.SendPropertyChanged("ID_Mission_D");
					this.OnID_Mission_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DISCOVER_BLACK_HOLE", Storage="_DISCOVER", ThisKey="ID_Mission_D", OtherKey="ID_Mission_D", IsForeignKey=true)]
		public DISCOVER DISCOVER
		{
			get
			{
				return this._DISCOVER.Entity;
			}
			set
			{
				DISCOVER previousValue = this._DISCOVER.Entity;
				if (((previousValue != value) 
							|| (this._DISCOVER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DISCOVER.Entity = null;
						previousValue.BLACK_HOLEs.Remove(this);
					}
					this._DISCOVER.Entity = value;
					if ((value != null))
					{
						value.BLACK_HOLEs.Add(this);
						this._ID_Mission_D = value.ID_Mission_D;
					}
					else
					{
						this._ID_Mission_D = default(Nullable<int>);
					}
					this.SendPropertyChanged("DISCOVER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GALAXY_BLACK_HOLE", Storage="_GALAXY", ThisKey="ID_Galaxy", OtherKey="ID_Galaxy", IsForeignKey=true)]
		public GALAXY GALAXY
		{
			get
			{
				return this._GALAXY.Entity;
			}
			set
			{
				GALAXY previousValue = this._GALAXY.Entity;
				if (((previousValue != value) 
							|| (this._GALAXY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GALAXY.Entity = null;
						previousValue.BLACK_HOLEs.Remove(this);
					}
					this._GALAXY.Entity = value;
					if ((value != null))
					{
						value.BLACK_HOLEs.Add(this);
						this._ID_Galaxy = value.ID_Galaxy;
					}
					else
					{
						this._ID_Galaxy = default(int);
					}
					this.SendPropertyChanged("GALAXY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONSTELLATION")]
	public partial class CONSTELLATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Constellation;
		
		private string _Constellation_Name;
		
		private EntitySet<STAR> _STARs;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ConstellationChanging(int value);
    partial void OnID_ConstellationChanged();
    partial void OnConstellation_NameChanging(string value);
    partial void OnConstellation_NameChanged();
    #endregion
		
		public CONSTELLATION()
		{
			this._STARs = new EntitySet<STAR>(new Action<STAR>(this.attach_STARs), new Action<STAR>(this.detach_STARs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Constellation", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Constellation
		{
			get
			{
				return this._ID_Constellation;
			}
			set
			{
				if ((this._ID_Constellation != value))
				{
					this.OnID_ConstellationChanging(value);
					this.SendPropertyChanging();
					this._ID_Constellation = value;
					this.SendPropertyChanged("ID_Constellation");
					this.OnID_ConstellationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Constellation_Name", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Constellation_Name
		{
			get
			{
				return this._Constellation_Name;
			}
			set
			{
				if ((this._Constellation_Name != value))
				{
					this.OnConstellation_NameChanging(value);
					this.SendPropertyChanging();
					this._Constellation_Name = value;
					this.SendPropertyChanged("Constellation_Name");
					this.OnConstellation_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONSTELLATION_STAR", Storage="_STARs", ThisKey="ID_Constellation", OtherKey="ID_Constellation")]
		public EntitySet<STAR> STARs
		{
			get
			{
				return this._STARs;
			}
			set
			{
				this._STARs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STARs(STAR entity)
		{
			this.SendPropertyChanging();
			entity.CONSTELLATION = this;
		}
		
		private void detach_STARs(STAR entity)
		{
			this.SendPropertyChanging();
			entity.CONSTELLATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DELIVER_IN_ORBIT")]
	public partial class DELIVER_IN_ORBIT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Mission_DO;
		
		private string _Mission_DO_Name;
		
		private string _Mission_DO_Description;
		
		private System.DateTime _Begin_Date;
		
		private int _ID_Launch_Site;
		
		private int _ID_Satellite;
		
		private System.Nullable<System.DateTime> _End_Date;
		
		private int _ID_Team;
		
		private System.Nullable<int> _ID_Space_Station;
		
		private int _ID_Planet;
		
		private EntityRef<LAUNCH_SITE> _LAUNCH_SITE;
		
		private EntityRef<PLANET> _PLANET;
		
		private EntityRef<SATELLITE> _SATELLITE;
		
		private EntityRef<SPACE_STATION> _SPACE_STATION;
		
		private EntityRef<TEAM> _TEAM;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Mission_DOChanging(int value);
    partial void OnID_Mission_DOChanged();
    partial void OnMission_DO_NameChanging(string value);
    partial void OnMission_DO_NameChanged();
    partial void OnMission_DO_DescriptionChanging(string value);
    partial void OnMission_DO_DescriptionChanged();
    partial void OnBegin_DateChanging(System.DateTime value);
    partial void OnBegin_DateChanged();
    partial void OnID_Launch_SiteChanging(int value);
    partial void OnID_Launch_SiteChanged();
    partial void OnID_SatelliteChanging(int value);
    partial void OnID_SatelliteChanged();
    partial void OnEnd_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnd_DateChanged();
    partial void OnID_TeamChanging(int value);
    partial void OnID_TeamChanged();
    partial void OnID_Space_StationChanging(System.Nullable<int> value);
    partial void OnID_Space_StationChanged();
    partial void OnID_PlanetChanging(int value);
    partial void OnID_PlanetChanged();
    #endregion
		
		public DELIVER_IN_ORBIT()
		{
			this._LAUNCH_SITE = default(EntityRef<LAUNCH_SITE>);
			this._PLANET = default(EntityRef<PLANET>);
			this._SATELLITE = default(EntityRef<SATELLITE>);
			this._SPACE_STATION = default(EntityRef<SPACE_STATION>);
			this._TEAM = default(EntityRef<TEAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mission_DO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Mission_DO
		{
			get
			{
				return this._ID_Mission_DO;
			}
			set
			{
				if ((this._ID_Mission_DO != value))
				{
					this.OnID_Mission_DOChanging(value);
					this.SendPropertyChanging();
					this._ID_Mission_DO = value;
					this.SendPropertyChanged("ID_Mission_DO");
					this.OnID_Mission_DOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mission_DO_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Mission_DO_Name
		{
			get
			{
				return this._Mission_DO_Name;
			}
			set
			{
				if ((this._Mission_DO_Name != value))
				{
					this.OnMission_DO_NameChanging(value);
					this.SendPropertyChanging();
					this._Mission_DO_Name = value;
					this.SendPropertyChanged("Mission_DO_Name");
					this.OnMission_DO_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mission_DO_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Mission_DO_Description
		{
			get
			{
				return this._Mission_DO_Description;
			}
			set
			{
				if ((this._Mission_DO_Description != value))
				{
					this.OnMission_DO_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Mission_DO_Description = value;
					this.SendPropertyChanged("Mission_DO_Description");
					this.OnMission_DO_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Begin_Date", DbType="Date NOT NULL")]
		public System.DateTime Begin_Date
		{
			get
			{
				return this._Begin_Date;
			}
			set
			{
				if ((this._Begin_Date != value))
				{
					this.OnBegin_DateChanging(value);
					this.SendPropertyChanging();
					this._Begin_Date = value;
					this.SendPropertyChanged("Begin_Date");
					this.OnBegin_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Launch_Site", DbType="Int NOT NULL")]
		public int ID_Launch_Site
		{
			get
			{
				return this._ID_Launch_Site;
			}
			set
			{
				if ((this._ID_Launch_Site != value))
				{
					if (this._LAUNCH_SITE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_Launch_SiteChanging(value);
					this.SendPropertyChanging();
					this._ID_Launch_Site = value;
					this.SendPropertyChanged("ID_Launch_Site");
					this.OnID_Launch_SiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Satellite", DbType="Int NOT NULL")]
		public int ID_Satellite
		{
			get
			{
				return this._ID_Satellite;
			}
			set
			{
				if ((this._ID_Satellite != value))
				{
					if (this._SATELLITE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SatelliteChanging(value);
					this.SendPropertyChanging();
					this._ID_Satellite = value;
					this.SendPropertyChanged("ID_Satellite");
					this.OnID_SatelliteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_End_Date", DbType="Date")]
		public System.Nullable<System.DateTime> End_Date
		{
			get
			{
				return this._End_Date;
			}
			set
			{
				if ((this._End_Date != value))
				{
					this.OnEnd_DateChanging(value);
					this.SendPropertyChanging();
					this._End_Date = value;
					this.SendPropertyChanged("End_Date");
					this.OnEnd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Team", DbType="Int NOT NULL")]
		public int ID_Team
		{
			get
			{
				return this._ID_Team;
			}
			set
			{
				if ((this._ID_Team != value))
				{
					if (this._TEAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TeamChanging(value);
					this.SendPropertyChanging();
					this._ID_Team = value;
					this.SendPropertyChanged("ID_Team");
					this.OnID_TeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Space_Station", DbType="Int")]
		public System.Nullable<int> ID_Space_Station
		{
			get
			{
				return this._ID_Space_Station;
			}
			set
			{
				if ((this._ID_Space_Station != value))
				{
					if (this._SPACE_STATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_Space_StationChanging(value);
					this.SendPropertyChanging();
					this._ID_Space_Station = value;
					this.SendPropertyChanged("ID_Space_Station");
					this.OnID_Space_StationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Planet", DbType="Int NOT NULL")]
		public int ID_Planet
		{
			get
			{
				return this._ID_Planet;
			}
			set
			{
				if ((this._ID_Planet != value))
				{
					if (this._PLANET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PlanetChanging(value);
					this.SendPropertyChanging();
					this._ID_Planet = value;
					this.SendPropertyChanged("ID_Planet");
					this.OnID_PlanetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAUNCH_SITE_DELIVER_IN_ORBIT", Storage="_LAUNCH_SITE", ThisKey="ID_Launch_Site", OtherKey="ID_Launch_Site", IsForeignKey=true)]
		public LAUNCH_SITE LAUNCH_SITE
		{
			get
			{
				return this._LAUNCH_SITE.Entity;
			}
			set
			{
				LAUNCH_SITE previousValue = this._LAUNCH_SITE.Entity;
				if (((previousValue != value) 
							|| (this._LAUNCH_SITE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAUNCH_SITE.Entity = null;
						previousValue.DELIVER_IN_ORBITs.Remove(this);
					}
					this._LAUNCH_SITE.Entity = value;
					if ((value != null))
					{
						value.DELIVER_IN_ORBITs.Add(this);
						this._ID_Launch_Site = value.ID_Launch_Site;
					}
					else
					{
						this._ID_Launch_Site = default(int);
					}
					this.SendPropertyChanged("LAUNCH_SITE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PLANET_DELIVER_IN_ORBIT", Storage="_PLANET", ThisKey="ID_Planet", OtherKey="ID_Planet", IsForeignKey=true)]
		public PLANET PLANET
		{
			get
			{
				return this._PLANET.Entity;
			}
			set
			{
				PLANET previousValue = this._PLANET.Entity;
				if (((previousValue != value) 
							|| (this._PLANET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PLANET.Entity = null;
						previousValue.DELIVER_IN_ORBITs.Remove(this);
					}
					this._PLANET.Entity = value;
					if ((value != null))
					{
						value.DELIVER_IN_ORBITs.Add(this);
						this._ID_Planet = value.ID_Planet;
					}
					else
					{
						this._ID_Planet = default(int);
					}
					this.SendPropertyChanged("PLANET");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SATELLITE_DELIVER_IN_ORBIT", Storage="_SATELLITE", ThisKey="ID_Satellite", OtherKey="ID_Satellite", IsForeignKey=true)]
		public SATELLITE SATELLITE
		{
			get
			{
				return this._SATELLITE.Entity;
			}
			set
			{
				SATELLITE previousValue = this._SATELLITE.Entity;
				if (((previousValue != value) 
							|| (this._SATELLITE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SATELLITE.Entity = null;
						previousValue.DELIVER_IN_ORBITs.Remove(this);
					}
					this._SATELLITE.Entity = value;
					if ((value != null))
					{
						value.DELIVER_IN_ORBITs.Add(this);
						this._ID_Satellite = value.ID_Satellite;
					}
					else
					{
						this._ID_Satellite = default(int);
					}
					this.SendPropertyChanged("SATELLITE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPACE_STATION_DELIVER_IN_ORBIT", Storage="_SPACE_STATION", ThisKey="ID_Space_Station", OtherKey="ID_Space_Station", IsForeignKey=true)]
		public SPACE_STATION SPACE_STATION
		{
			get
			{
				return this._SPACE_STATION.Entity;
			}
			set
			{
				SPACE_STATION previousValue = this._SPACE_STATION.Entity;
				if (((previousValue != value) 
							|| (this._SPACE_STATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SPACE_STATION.Entity = null;
						previousValue.DELIVER_IN_ORBITs.Remove(this);
					}
					this._SPACE_STATION.Entity = value;
					if ((value != null))
					{
						value.DELIVER_IN_ORBITs.Add(this);
						this._ID_Space_Station = value.ID_Space_Station;
					}
					else
					{
						this._ID_Space_Station = default(Nullable<int>);
					}
					this.SendPropertyChanged("SPACE_STATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TEAM_DELIVER_IN_ORBIT", Storage="_TEAM", ThisKey="ID_Team", OtherKey="ID_Team", IsForeignKey=true)]
		public TEAM TEAM
		{
			get
			{
				return this._TEAM.Entity;
			}
			set
			{
				TEAM previousValue = this._TEAM.Entity;
				if (((previousValue != value) 
							|| (this._TEAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TEAM.Entity = null;
						previousValue.DELIVER_IN_ORBITs.Remove(this);
					}
					this._TEAM.Entity = value;
					if ((value != null))
					{
						value.DELIVER_IN_ORBITs.Add(this);
						this._ID_Team = value.ID_Team;
					}
					else
					{
						this._ID_Team = default(int);
					}
					this.SendPropertyChanged("TEAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DISCOVER")]
	public partial class DISCOVER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Mission_D;
		
		private string _Mission_D_Name;
		
		private string _Mission_D_Description;
		
		private System.DateTime _Begin_Date;
		
		private int _ID_Launch_Site;
		
		private int _ID_Satellite;
		
		private System.Nullable<System.DateTime> _End_Date;
		
		private int _ID_Team;
		
		private System.Nullable<int> _ID_Space_Station;
		
		private EntitySet<BLACK_HOLE> _BLACK_HOLEs;
		
		private EntitySet<MOON> _MOONs;
		
		private EntitySet<PLANET> _PLANETs;
		
		private EntitySet<STAR> _STARs;
		
		private EntityRef<LAUNCH_SITE> _LAUNCH_SITE;
		
		private EntityRef<SATELLITE> _SATELLITE;
		
		private EntityRef<SPACE_STATION> _SPACE_STATION;
		
		private EntityRef<TEAM> _TEAM;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Mission_DChanging(int value);
    partial void OnID_Mission_DChanged();
    partial void OnMission_D_NameChanging(string value);
    partial void OnMission_D_NameChanged();
    partial void OnMission_D_DescriptionChanging(string value);
    partial void OnMission_D_DescriptionChanged();
    partial void OnBegin_DateChanging(System.DateTime value);
    partial void OnBegin_DateChanged();
    partial void OnID_Launch_SiteChanging(int value);
    partial void OnID_Launch_SiteChanged();
    partial void OnID_SatelliteChanging(int value);
    partial void OnID_SatelliteChanged();
    partial void OnEnd_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnd_DateChanged();
    partial void OnID_TeamChanging(int value);
    partial void OnID_TeamChanged();
    partial void OnID_Space_StationChanging(System.Nullable<int> value);
    partial void OnID_Space_StationChanged();
    #endregion
		
		public DISCOVER()
		{
			this._BLACK_HOLEs = new EntitySet<BLACK_HOLE>(new Action<BLACK_HOLE>(this.attach_BLACK_HOLEs), new Action<BLACK_HOLE>(this.detach_BLACK_HOLEs));
			this._MOONs = new EntitySet<MOON>(new Action<MOON>(this.attach_MOONs), new Action<MOON>(this.detach_MOONs));
			this._PLANETs = new EntitySet<PLANET>(new Action<PLANET>(this.attach_PLANETs), new Action<PLANET>(this.detach_PLANETs));
			this._STARs = new EntitySet<STAR>(new Action<STAR>(this.attach_STARs), new Action<STAR>(this.detach_STARs));
			this._LAUNCH_SITE = default(EntityRef<LAUNCH_SITE>);
			this._SATELLITE = default(EntityRef<SATELLITE>);
			this._SPACE_STATION = default(EntityRef<SPACE_STATION>);
			this._TEAM = default(EntityRef<TEAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mission_D", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Mission_D
		{
			get
			{
				return this._ID_Mission_D;
			}
			set
			{
				if ((this._ID_Mission_D != value))
				{
					this.OnID_Mission_DChanging(value);
					this.SendPropertyChanging();
					this._ID_Mission_D = value;
					this.SendPropertyChanged("ID_Mission_D");
					this.OnID_Mission_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mission_D_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Mission_D_Name
		{
			get
			{
				return this._Mission_D_Name;
			}
			set
			{
				if ((this._Mission_D_Name != value))
				{
					this.OnMission_D_NameChanging(value);
					this.SendPropertyChanging();
					this._Mission_D_Name = value;
					this.SendPropertyChanged("Mission_D_Name");
					this.OnMission_D_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mission_D_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Mission_D_Description
		{
			get
			{
				return this._Mission_D_Description;
			}
			set
			{
				if ((this._Mission_D_Description != value))
				{
					this.OnMission_D_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Mission_D_Description = value;
					this.SendPropertyChanged("Mission_D_Description");
					this.OnMission_D_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Begin_Date", DbType="Date NOT NULL")]
		public System.DateTime Begin_Date
		{
			get
			{
				return this._Begin_Date;
			}
			set
			{
				if ((this._Begin_Date != value))
				{
					this.OnBegin_DateChanging(value);
					this.SendPropertyChanging();
					this._Begin_Date = value;
					this.SendPropertyChanged("Begin_Date");
					this.OnBegin_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Launch_Site", DbType="Int NOT NULL")]
		public int ID_Launch_Site
		{
			get
			{
				return this._ID_Launch_Site;
			}
			set
			{
				if ((this._ID_Launch_Site != value))
				{
					if (this._LAUNCH_SITE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_Launch_SiteChanging(value);
					this.SendPropertyChanging();
					this._ID_Launch_Site = value;
					this.SendPropertyChanged("ID_Launch_Site");
					this.OnID_Launch_SiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Satellite", DbType="Int NOT NULL")]
		public int ID_Satellite
		{
			get
			{
				return this._ID_Satellite;
			}
			set
			{
				if ((this._ID_Satellite != value))
				{
					if (this._SATELLITE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SatelliteChanging(value);
					this.SendPropertyChanging();
					this._ID_Satellite = value;
					this.SendPropertyChanged("ID_Satellite");
					this.OnID_SatelliteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_End_Date", DbType="Date")]
		public System.Nullable<System.DateTime> End_Date
		{
			get
			{
				return this._End_Date;
			}
			set
			{
				if ((this._End_Date != value))
				{
					this.OnEnd_DateChanging(value);
					this.SendPropertyChanging();
					this._End_Date = value;
					this.SendPropertyChanged("End_Date");
					this.OnEnd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Team", DbType="Int NOT NULL")]
		public int ID_Team
		{
			get
			{
				return this._ID_Team;
			}
			set
			{
				if ((this._ID_Team != value))
				{
					if (this._TEAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TeamChanging(value);
					this.SendPropertyChanging();
					this._ID_Team = value;
					this.SendPropertyChanged("ID_Team");
					this.OnID_TeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Space_Station", DbType="Int")]
		public System.Nullable<int> ID_Space_Station
		{
			get
			{
				return this._ID_Space_Station;
			}
			set
			{
				if ((this._ID_Space_Station != value))
				{
					if (this._SPACE_STATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_Space_StationChanging(value);
					this.SendPropertyChanging();
					this._ID_Space_Station = value;
					this.SendPropertyChanged("ID_Space_Station");
					this.OnID_Space_StationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DISCOVER_BLACK_HOLE", Storage="_BLACK_HOLEs", ThisKey="ID_Mission_D", OtherKey="ID_Mission_D")]
		public EntitySet<BLACK_HOLE> BLACK_HOLEs
		{
			get
			{
				return this._BLACK_HOLEs;
			}
			set
			{
				this._BLACK_HOLEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DISCOVER_MOON", Storage="_MOONs", ThisKey="ID_Mission_D", OtherKey="ID_Mission_D")]
		public EntitySet<MOON> MOONs
		{
			get
			{
				return this._MOONs;
			}
			set
			{
				this._MOONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DISCOVER_PLANET", Storage="_PLANETs", ThisKey="ID_Mission_D", OtherKey="ID_Mission_D")]
		public EntitySet<PLANET> PLANETs
		{
			get
			{
				return this._PLANETs;
			}
			set
			{
				this._PLANETs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DISCOVER_STAR", Storage="_STARs", ThisKey="ID_Mission_D", OtherKey="ID_Mission_D")]
		public EntitySet<STAR> STARs
		{
			get
			{
				return this._STARs;
			}
			set
			{
				this._STARs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAUNCH_SITE_DISCOVER", Storage="_LAUNCH_SITE", ThisKey="ID_Launch_Site", OtherKey="ID_Launch_Site", IsForeignKey=true)]
		public LAUNCH_SITE LAUNCH_SITE
		{
			get
			{
				return this._LAUNCH_SITE.Entity;
			}
			set
			{
				LAUNCH_SITE previousValue = this._LAUNCH_SITE.Entity;
				if (((previousValue != value) 
							|| (this._LAUNCH_SITE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAUNCH_SITE.Entity = null;
						previousValue.DISCOVERs.Remove(this);
					}
					this._LAUNCH_SITE.Entity = value;
					if ((value != null))
					{
						value.DISCOVERs.Add(this);
						this._ID_Launch_Site = value.ID_Launch_Site;
					}
					else
					{
						this._ID_Launch_Site = default(int);
					}
					this.SendPropertyChanged("LAUNCH_SITE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SATELLITE_DISCOVER", Storage="_SATELLITE", ThisKey="ID_Satellite", OtherKey="ID_Satellite", IsForeignKey=true)]
		public SATELLITE SATELLITE
		{
			get
			{
				return this._SATELLITE.Entity;
			}
			set
			{
				SATELLITE previousValue = this._SATELLITE.Entity;
				if (((previousValue != value) 
							|| (this._SATELLITE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SATELLITE.Entity = null;
						previousValue.DISCOVERs.Remove(this);
					}
					this._SATELLITE.Entity = value;
					if ((value != null))
					{
						value.DISCOVERs.Add(this);
						this._ID_Satellite = value.ID_Satellite;
					}
					else
					{
						this._ID_Satellite = default(int);
					}
					this.SendPropertyChanged("SATELLITE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPACE_STATION_DISCOVER", Storage="_SPACE_STATION", ThisKey="ID_Space_Station", OtherKey="ID_Space_Station", IsForeignKey=true)]
		public SPACE_STATION SPACE_STATION
		{
			get
			{
				return this._SPACE_STATION.Entity;
			}
			set
			{
				SPACE_STATION previousValue = this._SPACE_STATION.Entity;
				if (((previousValue != value) 
							|| (this._SPACE_STATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SPACE_STATION.Entity = null;
						previousValue.DISCOVERs.Remove(this);
					}
					this._SPACE_STATION.Entity = value;
					if ((value != null))
					{
						value.DISCOVERs.Add(this);
						this._ID_Space_Station = value.ID_Space_Station;
					}
					else
					{
						this._ID_Space_Station = default(Nullable<int>);
					}
					this.SendPropertyChanged("SPACE_STATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TEAM_DISCOVER", Storage="_TEAM", ThisKey="ID_Team", OtherKey="ID_Team", IsForeignKey=true)]
		public TEAM TEAM
		{
			get
			{
				return this._TEAM.Entity;
			}
			set
			{
				TEAM previousValue = this._TEAM.Entity;
				if (((previousValue != value) 
							|| (this._TEAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TEAM.Entity = null;
						previousValue.DISCOVERs.Remove(this);
					}
					this._TEAM.Entity = value;
					if ((value != null))
					{
						value.DISCOVERs.Add(this);
						this._ID_Team = value.ID_Team;
					}
					else
					{
						this._ID_Team = default(int);
					}
					this.SendPropertyChanged("TEAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BLACK_HOLEs(BLACK_HOLE entity)
		{
			this.SendPropertyChanging();
			entity.DISCOVER = this;
		}
		
		private void detach_BLACK_HOLEs(BLACK_HOLE entity)
		{
			this.SendPropertyChanging();
			entity.DISCOVER = null;
		}
		
		private void attach_MOONs(MOON entity)
		{
			this.SendPropertyChanging();
			entity.DISCOVER = this;
		}
		
		private void detach_MOONs(MOON entity)
		{
			this.SendPropertyChanging();
			entity.DISCOVER = null;
		}
		
		private void attach_PLANETs(PLANET entity)
		{
			this.SendPropertyChanging();
			entity.DISCOVER = this;
		}
		
		private void detach_PLANETs(PLANET entity)
		{
			this.SendPropertyChanging();
			entity.DISCOVER = null;
		}
		
		private void attach_STARs(STAR entity)
		{
			this.SendPropertyChanging();
			entity.DISCOVER = this;
		}
		
		private void detach_STARs(STAR entity)
		{
			this.SendPropertyChanging();
			entity.DISCOVER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GALAXY")]
	public partial class GALAXY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Galaxy;
		
		private string _Galaxy_Name;
		
		private EntitySet<BLACK_HOLE> _BLACK_HOLEs;
		
		private EntitySet<MOON> _MOONs;
		
		private EntitySet<PLANET> _PLANETs;
		
		private EntitySet<STAR> _STARs;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_GalaxyChanging(int value);
    partial void OnID_GalaxyChanged();
    partial void OnGalaxy_NameChanging(string value);
    partial void OnGalaxy_NameChanged();
    #endregion
		
		public GALAXY()
		{
			this._BLACK_HOLEs = new EntitySet<BLACK_HOLE>(new Action<BLACK_HOLE>(this.attach_BLACK_HOLEs), new Action<BLACK_HOLE>(this.detach_BLACK_HOLEs));
			this._MOONs = new EntitySet<MOON>(new Action<MOON>(this.attach_MOONs), new Action<MOON>(this.detach_MOONs));
			this._PLANETs = new EntitySet<PLANET>(new Action<PLANET>(this.attach_PLANETs), new Action<PLANET>(this.detach_PLANETs));
			this._STARs = new EntitySet<STAR>(new Action<STAR>(this.attach_STARs), new Action<STAR>(this.detach_STARs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Galaxy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Galaxy
		{
			get
			{
				return this._ID_Galaxy;
			}
			set
			{
				if ((this._ID_Galaxy != value))
				{
					this.OnID_GalaxyChanging(value);
					this.SendPropertyChanging();
					this._ID_Galaxy = value;
					this.SendPropertyChanged("ID_Galaxy");
					this.OnID_GalaxyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Galaxy_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Galaxy_Name
		{
			get
			{
				return this._Galaxy_Name;
			}
			set
			{
				if ((this._Galaxy_Name != value))
				{
					this.OnGalaxy_NameChanging(value);
					this.SendPropertyChanging();
					this._Galaxy_Name = value;
					this.SendPropertyChanged("Galaxy_Name");
					this.OnGalaxy_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GALAXY_BLACK_HOLE", Storage="_BLACK_HOLEs", ThisKey="ID_Galaxy", OtherKey="ID_Galaxy")]
		public EntitySet<BLACK_HOLE> BLACK_HOLEs
		{
			get
			{
				return this._BLACK_HOLEs;
			}
			set
			{
				this._BLACK_HOLEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GALAXY_MOON", Storage="_MOONs", ThisKey="ID_Galaxy", OtherKey="ID_Galaxy")]
		public EntitySet<MOON> MOONs
		{
			get
			{
				return this._MOONs;
			}
			set
			{
				this._MOONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GALAXY_PLANET", Storage="_PLANETs", ThisKey="ID_Galaxy", OtherKey="ID_Galaxy")]
		public EntitySet<PLANET> PLANETs
		{
			get
			{
				return this._PLANETs;
			}
			set
			{
				this._PLANETs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GALAXY_STAR", Storage="_STARs", ThisKey="ID_Galaxy", OtherKey="ID_Galaxy")]
		public EntitySet<STAR> STARs
		{
			get
			{
				return this._STARs;
			}
			set
			{
				this._STARs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BLACK_HOLEs(BLACK_HOLE entity)
		{
			this.SendPropertyChanging();
			entity.GALAXY = this;
		}
		
		private void detach_BLACK_HOLEs(BLACK_HOLE entity)
		{
			this.SendPropertyChanging();
			entity.GALAXY = null;
		}
		
		private void attach_MOONs(MOON entity)
		{
			this.SendPropertyChanging();
			entity.GALAXY = this;
		}
		
		private void detach_MOONs(MOON entity)
		{
			this.SendPropertyChanging();
			entity.GALAXY = null;
		}
		
		private void attach_PLANETs(PLANET entity)
		{
			this.SendPropertyChanging();
			entity.GALAXY = this;
		}
		
		private void detach_PLANETs(PLANET entity)
		{
			this.SendPropertyChanging();
			entity.GALAXY = null;
		}
		
		private void attach_STARs(STAR entity)
		{
			this.SendPropertyChanging();
			entity.GALAXY = this;
		}
		
		private void detach_STARs(STAR entity)
		{
			this.SendPropertyChanging();
			entity.GALAXY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANGAR")]
	public partial class HANGAR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Hangar;
		
		private string _Hangar_Name;
		
		private string _Hangar_Address;
		
		private string _Hangar_Country;
		
		private EntitySet<ROCKET> _ROCKETs;
		
		private EntitySet<SATELLITE> _SATELLITEs;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HangarChanging(int value);
    partial void OnID_HangarChanged();
    partial void OnHangar_NameChanging(string value);
    partial void OnHangar_NameChanged();
    partial void OnHangar_AddressChanging(string value);
    partial void OnHangar_AddressChanged();
    partial void OnHangar_CountryChanging(string value);
    partial void OnHangar_CountryChanged();
    #endregion
		
		public HANGAR()
		{
			this._ROCKETs = new EntitySet<ROCKET>(new Action<ROCKET>(this.attach_ROCKETs), new Action<ROCKET>(this.detach_ROCKETs));
			this._SATELLITEs = new EntitySet<SATELLITE>(new Action<SATELLITE>(this.attach_SATELLITEs), new Action<SATELLITE>(this.detach_SATELLITEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Hangar", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Hangar
		{
			get
			{
				return this._ID_Hangar;
			}
			set
			{
				if ((this._ID_Hangar != value))
				{
					this.OnID_HangarChanging(value);
					this.SendPropertyChanging();
					this._ID_Hangar = value;
					this.SendPropertyChanged("ID_Hangar");
					this.OnID_HangarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hangar_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Hangar_Name
		{
			get
			{
				return this._Hangar_Name;
			}
			set
			{
				if ((this._Hangar_Name != value))
				{
					this.OnHangar_NameChanging(value);
					this.SendPropertyChanging();
					this._Hangar_Name = value;
					this.SendPropertyChanged("Hangar_Name");
					this.OnHangar_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hangar_Address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Hangar_Address
		{
			get
			{
				return this._Hangar_Address;
			}
			set
			{
				if ((this._Hangar_Address != value))
				{
					this.OnHangar_AddressChanging(value);
					this.SendPropertyChanging();
					this._Hangar_Address = value;
					this.SendPropertyChanged("Hangar_Address");
					this.OnHangar_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hangar_Country", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Hangar_Country
		{
			get
			{
				return this._Hangar_Country;
			}
			set
			{
				if ((this._Hangar_Country != value))
				{
					this.OnHangar_CountryChanging(value);
					this.SendPropertyChanging();
					this._Hangar_Country = value;
					this.SendPropertyChanged("Hangar_Country");
					this.OnHangar_CountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGAR_ROCKET", Storage="_ROCKETs", ThisKey="ID_Hangar", OtherKey="ID_Hangar")]
		public EntitySet<ROCKET> ROCKETs
		{
			get
			{
				return this._ROCKETs;
			}
			set
			{
				this._ROCKETs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGAR_SATELLITE", Storage="_SATELLITEs", ThisKey="ID_Hangar", OtherKey="ID_Hangar")]
		public EntitySet<SATELLITE> SATELLITEs
		{
			get
			{
				return this._SATELLITEs;
			}
			set
			{
				this._SATELLITEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ROCKETs(ROCKET entity)
		{
			this.SendPropertyChanging();
			entity.HANGAR = this;
		}
		
		private void detach_ROCKETs(ROCKET entity)
		{
			this.SendPropertyChanging();
			entity.HANGAR = null;
		}
		
		private void attach_SATELLITEs(SATELLITE entity)
		{
			this.SendPropertyChanging();
			entity.HANGAR = this;
		}
		
		private void detach_SATELLITEs(SATELLITE entity)
		{
			this.SendPropertyChanging();
			entity.HANGAR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAB")]
	public partial class LAB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Lab_Number;
		
		private EntitySet<SIMULATION> _SIMULATIONs;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLab_NumberChanging(int value);
    partial void OnLab_NumberChanged();
    #endregion
		
		public LAB()
		{
			this._SIMULATIONs = new EntitySet<SIMULATION>(new Action<SIMULATION>(this.attach_SIMULATIONs), new Action<SIMULATION>(this.detach_SIMULATIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lab_Number", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Lab_Number
		{
			get
			{
				return this._Lab_Number;
			}
			set
			{
				if ((this._Lab_Number != value))
				{
					this.OnLab_NumberChanging(value);
					this.SendPropertyChanging();
					this._Lab_Number = value;
					this.SendPropertyChanged("Lab_Number");
					this.OnLab_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAB_SIMULATION", Storage="_SIMULATIONs", ThisKey="Lab_Number", OtherKey="Lab_Number")]
		public EntitySet<SIMULATION> SIMULATIONs
		{
			get
			{
				return this._SIMULATIONs;
			}
			set
			{
				this._SIMULATIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SIMULATIONs(SIMULATION entity)
		{
			this.SendPropertyChanging();
			entity.LAB = this;
		}
		
		private void detach_SIMULATIONs(SIMULATION entity)
		{
			this.SendPropertyChanging();
			entity.LAB = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAUNCH_SITE")]
	public partial class LAUNCH_SITE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Launch_Site;
		
		private string _Launch_Site_Name;
		
		private string _Launch_Site_Address;
		
		private string _Launch_Site_Country;
		
		private EntitySet<DELIVER_IN_ORBIT> _DELIVER_IN_ORBITs;
		
		private EntitySet<DISCOVER> _DISCOVERs;
		
		private EntitySet<RECONNAISSANCE> _RECONNAISSANCEs;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Launch_SiteChanging(int value);
    partial void OnID_Launch_SiteChanged();
    partial void OnLaunch_Site_NameChanging(string value);
    partial void OnLaunch_Site_NameChanged();
    partial void OnLaunch_Site_AddressChanging(string value);
    partial void OnLaunch_Site_AddressChanged();
    partial void OnLaunch_Site_CountryChanging(string value);
    partial void OnLaunch_Site_CountryChanged();
    #endregion
		
		public LAUNCH_SITE()
		{
			this._DELIVER_IN_ORBITs = new EntitySet<DELIVER_IN_ORBIT>(new Action<DELIVER_IN_ORBIT>(this.attach_DELIVER_IN_ORBITs), new Action<DELIVER_IN_ORBIT>(this.detach_DELIVER_IN_ORBITs));
			this._DISCOVERs = new EntitySet<DISCOVER>(new Action<DISCOVER>(this.attach_DISCOVERs), new Action<DISCOVER>(this.detach_DISCOVERs));
			this._RECONNAISSANCEs = new EntitySet<RECONNAISSANCE>(new Action<RECONNAISSANCE>(this.attach_RECONNAISSANCEs), new Action<RECONNAISSANCE>(this.detach_RECONNAISSANCEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Launch_Site", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Launch_Site
		{
			get
			{
				return this._ID_Launch_Site;
			}
			set
			{
				if ((this._ID_Launch_Site != value))
				{
					this.OnID_Launch_SiteChanging(value);
					this.SendPropertyChanging();
					this._ID_Launch_Site = value;
					this.SendPropertyChanged("ID_Launch_Site");
					this.OnID_Launch_SiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Launch_Site_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Launch_Site_Name
		{
			get
			{
				return this._Launch_Site_Name;
			}
			set
			{
				if ((this._Launch_Site_Name != value))
				{
					this.OnLaunch_Site_NameChanging(value);
					this.SendPropertyChanging();
					this._Launch_Site_Name = value;
					this.SendPropertyChanged("Launch_Site_Name");
					this.OnLaunch_Site_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Launch_Site_Address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Launch_Site_Address
		{
			get
			{
				return this._Launch_Site_Address;
			}
			set
			{
				if ((this._Launch_Site_Address != value))
				{
					this.OnLaunch_Site_AddressChanging(value);
					this.SendPropertyChanging();
					this._Launch_Site_Address = value;
					this.SendPropertyChanged("Launch_Site_Address");
					this.OnLaunch_Site_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Launch_Site_Country", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Launch_Site_Country
		{
			get
			{
				return this._Launch_Site_Country;
			}
			set
			{
				if ((this._Launch_Site_Country != value))
				{
					this.OnLaunch_Site_CountryChanging(value);
					this.SendPropertyChanging();
					this._Launch_Site_Country = value;
					this.SendPropertyChanged("Launch_Site_Country");
					this.OnLaunch_Site_CountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAUNCH_SITE_DELIVER_IN_ORBIT", Storage="_DELIVER_IN_ORBITs", ThisKey="ID_Launch_Site", OtherKey="ID_Launch_Site")]
		public EntitySet<DELIVER_IN_ORBIT> DELIVER_IN_ORBITs
		{
			get
			{
				return this._DELIVER_IN_ORBITs;
			}
			set
			{
				this._DELIVER_IN_ORBITs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAUNCH_SITE_DISCOVER", Storage="_DISCOVERs", ThisKey="ID_Launch_Site", OtherKey="ID_Launch_Site")]
		public EntitySet<DISCOVER> DISCOVERs
		{
			get
			{
				return this._DISCOVERs;
			}
			set
			{
				this._DISCOVERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAUNCH_SITE_RECONNAISSANCE", Storage="_RECONNAISSANCEs", ThisKey="ID_Launch_Site", OtherKey="ID_Launch_Site")]
		public EntitySet<RECONNAISSANCE> RECONNAISSANCEs
		{
			get
			{
				return this._RECONNAISSANCEs;
			}
			set
			{
				this._RECONNAISSANCEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DELIVER_IN_ORBITs(DELIVER_IN_ORBIT entity)
		{
			this.SendPropertyChanging();
			entity.LAUNCH_SITE = this;
		}
		
		private void detach_DELIVER_IN_ORBITs(DELIVER_IN_ORBIT entity)
		{
			this.SendPropertyChanging();
			entity.LAUNCH_SITE = null;
		}
		
		private void attach_DISCOVERs(DISCOVER entity)
		{
			this.SendPropertyChanging();
			entity.LAUNCH_SITE = this;
		}
		
		private void detach_DISCOVERs(DISCOVER entity)
		{
			this.SendPropertyChanging();
			entity.LAUNCH_SITE = null;
		}
		
		private void attach_RECONNAISSANCEs(RECONNAISSANCE entity)
		{
			this.SendPropertyChanging();
			entity.LAUNCH_SITE = this;
		}
		
		private void detach_RECONNAISSANCEs(RECONNAISSANCE entity)
		{
			this.SendPropertyChanging();
			entity.LAUNCH_SITE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEMBERSHIP")]
	public partial class MEMBERSHIP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Employee;
		
		private System.DateTime _Entry_Date;
		
		private System.Nullable<System.DateTime> _Exit_Date;
		
		private int _ID_Team;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
		private EntityRef<TEAM> _TEAM;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_EmployeeChanging(int value);
    partial void OnID_EmployeeChanged();
    partial void OnEntry_DateChanging(System.DateTime value);
    partial void OnEntry_DateChanged();
    partial void OnExit_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnExit_DateChanged();
    partial void OnID_TeamChanging(int value);
    partial void OnID_TeamChanged();
    #endregion
		
		public MEMBERSHIP()
		{
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			this._TEAM = default(EntityRef<TEAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Employee", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Employee
		{
			get
			{
				return this._ID_Employee;
			}
			set
			{
				if ((this._ID_Employee != value))
				{
					if (this._EMPLOYEE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_EmployeeChanging(value);
					this.SendPropertyChanging();
					this._ID_Employee = value;
					this.SendPropertyChanged("ID_Employee");
					this.OnID_EmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entry_Date", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Entry_Date
		{
			get
			{
				return this._Entry_Date;
			}
			set
			{
				if ((this._Entry_Date != value))
				{
					this.OnEntry_DateChanging(value);
					this.SendPropertyChanging();
					this._Entry_Date = value;
					this.SendPropertyChanged("Entry_Date");
					this.OnEntry_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exit_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Exit_Date
		{
			get
			{
				return this._Exit_Date;
			}
			set
			{
				if ((this._Exit_Date != value))
				{
					this.OnExit_DateChanging(value);
					this.SendPropertyChanging();
					this._Exit_Date = value;
					this.SendPropertyChanged("Exit_Date");
					this.OnExit_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Team", DbType="Int NOT NULL")]
		public int ID_Team
		{
			get
			{
				return this._ID_Team;
			}
			set
			{
				if ((this._ID_Team != value))
				{
					if (this._TEAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TeamChanging(value);
					this.SendPropertyChanging();
					this._ID_Team = value;
					this.SendPropertyChanged("ID_Team");
					this.OnID_TeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_MEMBERSHIP", Storage="_EMPLOYEE", ThisKey="ID_Employee", OtherKey="ID_Employee", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.MEMBERSHIPs.Remove(this);
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.MEMBERSHIPs.Add(this);
						this._ID_Employee = value.ID_Employee;
					}
					else
					{
						this._ID_Employee = default(int);
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TEAM_MEMBERSHIP", Storage="_TEAM", ThisKey="ID_Team", OtherKey="ID_Team", IsForeignKey=true)]
		public TEAM TEAM
		{
			get
			{
				return this._TEAM.Entity;
			}
			set
			{
				TEAM previousValue = this._TEAM.Entity;
				if (((previousValue != value) 
							|| (this._TEAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TEAM.Entity = null;
						previousValue.MEMBERSHIPs.Remove(this);
					}
					this._TEAM.Entity = value;
					if ((value != null))
					{
						value.MEMBERSHIPs.Add(this);
						this._ID_Team = value.ID_Team;
					}
					else
					{
						this._ID_Team = default(int);
					}
					this.SendPropertyChanged("TEAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MOON")]
	public partial class MOON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Moon;
		
		private string _Moon_Name;
		
		private decimal _Distance_From_Earth_Mantissa;
		
		private decimal _Distance_From_Earth_Exp;
		
		private decimal _Radius;
		
		private decimal _Mass_Mantissa;
		
		private decimal _Mass_Exp;
		
		private int _ID_Galaxy;
		
		private System.Nullable<int> _ID_Mission_D;
		
		private int _ID_Planet;
		
		private EntitySet<RECONNAISSANCE> _RECONNAISSANCEs;
		
		private EntityRef<GALAXY> _GALAXY;
		
		private EntityRef<DISCOVER> _DISCOVER;
		
		private EntityRef<PLANET> _PLANET;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MoonChanging(int value);
    partial void OnID_MoonChanged();
    partial void OnMoon_NameChanging(string value);
    partial void OnMoon_NameChanged();
    partial void OnDistance_From_Earth_MantissaChanging(decimal value);
    partial void OnDistance_From_Earth_MantissaChanged();
    partial void OnDistance_From_Earth_ExpChanging(decimal value);
    partial void OnDistance_From_Earth_ExpChanged();
    partial void OnRadiusChanging(decimal value);
    partial void OnRadiusChanged();
    partial void OnMass_MantissaChanging(decimal value);
    partial void OnMass_MantissaChanged();
    partial void OnMass_ExpChanging(decimal value);
    partial void OnMass_ExpChanged();
    partial void OnID_GalaxyChanging(int value);
    partial void OnID_GalaxyChanged();
    partial void OnID_Mission_DChanging(System.Nullable<int> value);
    partial void OnID_Mission_DChanged();
    partial void OnID_PlanetChanging(int value);
    partial void OnID_PlanetChanged();
    #endregion
		
		public MOON()
		{
			this._RECONNAISSANCEs = new EntitySet<RECONNAISSANCE>(new Action<RECONNAISSANCE>(this.attach_RECONNAISSANCEs), new Action<RECONNAISSANCE>(this.detach_RECONNAISSANCEs));
			this._GALAXY = default(EntityRef<GALAXY>);
			this._DISCOVER = default(EntityRef<DISCOVER>);
			this._PLANET = default(EntityRef<PLANET>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Moon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Moon
		{
			get
			{
				return this._ID_Moon;
			}
			set
			{
				if ((this._ID_Moon != value))
				{
					this.OnID_MoonChanging(value);
					this.SendPropertyChanging();
					this._ID_Moon = value;
					this.SendPropertyChanged("ID_Moon");
					this.OnID_MoonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Moon_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Moon_Name
		{
			get
			{
				return this._Moon_Name;
			}
			set
			{
				if ((this._Moon_Name != value))
				{
					this.OnMoon_NameChanging(value);
					this.SendPropertyChanging();
					this._Moon_Name = value;
					this.SendPropertyChanged("Moon_Name");
					this.OnMoon_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance_From_Earth_Mantissa", DbType="Decimal(10,0) NOT NULL")]
		public decimal Distance_From_Earth_Mantissa
		{
			get
			{
				return this._Distance_From_Earth_Mantissa;
			}
			set
			{
				if ((this._Distance_From_Earth_Mantissa != value))
				{
					this.OnDistance_From_Earth_MantissaChanging(value);
					this.SendPropertyChanging();
					this._Distance_From_Earth_Mantissa = value;
					this.SendPropertyChanged("Distance_From_Earth_Mantissa");
					this.OnDistance_From_Earth_MantissaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance_From_Earth_Exp", DbType="Decimal(3,0) NOT NULL")]
		public decimal Distance_From_Earth_Exp
		{
			get
			{
				return this._Distance_From_Earth_Exp;
			}
			set
			{
				if ((this._Distance_From_Earth_Exp != value))
				{
					this.OnDistance_From_Earth_ExpChanging(value);
					this.SendPropertyChanging();
					this._Distance_From_Earth_Exp = value;
					this.SendPropertyChanged("Distance_From_Earth_Exp");
					this.OnDistance_From_Earth_ExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radius", DbType="Decimal(15,0) NOT NULL")]
		public decimal Radius
		{
			get
			{
				return this._Radius;
			}
			set
			{
				if ((this._Radius != value))
				{
					this.OnRadiusChanging(value);
					this.SendPropertyChanging();
					this._Radius = value;
					this.SendPropertyChanged("Radius");
					this.OnRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mass_Mantissa", DbType="Decimal(10,0) NOT NULL")]
		public decimal Mass_Mantissa
		{
			get
			{
				return this._Mass_Mantissa;
			}
			set
			{
				if ((this._Mass_Mantissa != value))
				{
					this.OnMass_MantissaChanging(value);
					this.SendPropertyChanging();
					this._Mass_Mantissa = value;
					this.SendPropertyChanged("Mass_Mantissa");
					this.OnMass_MantissaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mass_Exp", DbType="Decimal(3,0) NOT NULL")]
		public decimal Mass_Exp
		{
			get
			{
				return this._Mass_Exp;
			}
			set
			{
				if ((this._Mass_Exp != value))
				{
					this.OnMass_ExpChanging(value);
					this.SendPropertyChanging();
					this._Mass_Exp = value;
					this.SendPropertyChanged("Mass_Exp");
					this.OnMass_ExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Galaxy", DbType="Int NOT NULL")]
		public int ID_Galaxy
		{
			get
			{
				return this._ID_Galaxy;
			}
			set
			{
				if ((this._ID_Galaxy != value))
				{
					if (this._GALAXY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GalaxyChanging(value);
					this.SendPropertyChanging();
					this._ID_Galaxy = value;
					this.SendPropertyChanged("ID_Galaxy");
					this.OnID_GalaxyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mission_D", DbType="Int")]
		public System.Nullable<int> ID_Mission_D
		{
			get
			{
				return this._ID_Mission_D;
			}
			set
			{
				if ((this._ID_Mission_D != value))
				{
					if (this._DISCOVER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_Mission_DChanging(value);
					this.SendPropertyChanging();
					this._ID_Mission_D = value;
					this.SendPropertyChanged("ID_Mission_D");
					this.OnID_Mission_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Planet", DbType="Int NOT NULL")]
		public int ID_Planet
		{
			get
			{
				return this._ID_Planet;
			}
			set
			{
				if ((this._ID_Planet != value))
				{
					if (this._PLANET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PlanetChanging(value);
					this.SendPropertyChanging();
					this._ID_Planet = value;
					this.SendPropertyChanged("ID_Planet");
					this.OnID_PlanetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MOON_RECONNAISSANCE", Storage="_RECONNAISSANCEs", ThisKey="ID_Moon", OtherKey="ID_Moon")]
		public EntitySet<RECONNAISSANCE> RECONNAISSANCEs
		{
			get
			{
				return this._RECONNAISSANCEs;
			}
			set
			{
				this._RECONNAISSANCEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GALAXY_MOON", Storage="_GALAXY", ThisKey="ID_Galaxy", OtherKey="ID_Galaxy", IsForeignKey=true)]
		public GALAXY GALAXY
		{
			get
			{
				return this._GALAXY.Entity;
			}
			set
			{
				GALAXY previousValue = this._GALAXY.Entity;
				if (((previousValue != value) 
							|| (this._GALAXY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GALAXY.Entity = null;
						previousValue.MOONs.Remove(this);
					}
					this._GALAXY.Entity = value;
					if ((value != null))
					{
						value.MOONs.Add(this);
						this._ID_Galaxy = value.ID_Galaxy;
					}
					else
					{
						this._ID_Galaxy = default(int);
					}
					this.SendPropertyChanged("GALAXY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DISCOVER_MOON", Storage="_DISCOVER", ThisKey="ID_Mission_D", OtherKey="ID_Mission_D", IsForeignKey=true)]
		public DISCOVER DISCOVER
		{
			get
			{
				return this._DISCOVER.Entity;
			}
			set
			{
				DISCOVER previousValue = this._DISCOVER.Entity;
				if (((previousValue != value) 
							|| (this._DISCOVER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DISCOVER.Entity = null;
						previousValue.MOONs.Remove(this);
					}
					this._DISCOVER.Entity = value;
					if ((value != null))
					{
						value.MOONs.Add(this);
						this._ID_Mission_D = value.ID_Mission_D;
					}
					else
					{
						this._ID_Mission_D = default(Nullable<int>);
					}
					this.SendPropertyChanged("DISCOVER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PLANET_MOON", Storage="_PLANET", ThisKey="ID_Planet", OtherKey="ID_Planet", IsForeignKey=true)]
		public PLANET PLANET
		{
			get
			{
				return this._PLANET.Entity;
			}
			set
			{
				PLANET previousValue = this._PLANET.Entity;
				if (((previousValue != value) 
							|| (this._PLANET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PLANET.Entity = null;
						previousValue.MOONs.Remove(this);
					}
					this._PLANET.Entity = value;
					if ((value != null))
					{
						value.MOONs.Add(this);
						this._ID_Planet = value.ID_Planet;
					}
					else
					{
						this._ID_Planet = default(int);
					}
					this.SendPropertyChanged("PLANET");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RECONNAISSANCEs(RECONNAISSANCE entity)
		{
			this.SendPropertyChanging();
			entity.MOON = this;
		}
		
		private void detach_RECONNAISSANCEs(RECONNAISSANCE entity)
		{
			this.SendPropertyChanging();
			entity.MOON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PLANET")]
	public partial class PLANET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Planet;
		
		private string _Planet_Name;
		
		private decimal _Distance_From_Earth_Mantissa;
		
		private decimal _Distance_From_Earth_Exp;
		
		private decimal _Radius;
		
		private decimal _Mass_Mantissa;
		
		private decimal _Mass_Exp;
		
		private int _ID_Galaxy;
		
		private System.Nullable<int> _ID_Mission_D;
		
		private System.Nullable<int> _ID_Star;
		
		private EntitySet<DELIVER_IN_ORBIT> _DELIVER_IN_ORBITs;
		
		private EntitySet<MOON> _MOONs;
		
		private EntitySet<RECONNAISSANCE> _RECONNAISSANCEs;
		
		private EntitySet<SIMULATION> _SIMULATIONs;
		
		private EntityRef<GALAXY> _GALAXY;
		
		private EntityRef<DISCOVER> _DISCOVER;
		
		private EntityRef<STAR> _STAR;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PlanetChanging(int value);
    partial void OnID_PlanetChanged();
    partial void OnPlanet_NameChanging(string value);
    partial void OnPlanet_NameChanged();
    partial void OnDistance_From_Earth_MantissaChanging(decimal value);
    partial void OnDistance_From_Earth_MantissaChanged();
    partial void OnDistance_From_Earth_ExpChanging(decimal value);
    partial void OnDistance_From_Earth_ExpChanged();
    partial void OnRadiusChanging(decimal value);
    partial void OnRadiusChanged();
    partial void OnMass_MantissaChanging(decimal value);
    partial void OnMass_MantissaChanged();
    partial void OnMass_ExpChanging(decimal value);
    partial void OnMass_ExpChanged();
    partial void OnID_GalaxyChanging(int value);
    partial void OnID_GalaxyChanged();
    partial void OnID_Mission_DChanging(System.Nullable<int> value);
    partial void OnID_Mission_DChanged();
    partial void OnID_StarChanging(System.Nullable<int> value);
    partial void OnID_StarChanged();
    #endregion
		
		public PLANET()
		{
			this._DELIVER_IN_ORBITs = new EntitySet<DELIVER_IN_ORBIT>(new Action<DELIVER_IN_ORBIT>(this.attach_DELIVER_IN_ORBITs), new Action<DELIVER_IN_ORBIT>(this.detach_DELIVER_IN_ORBITs));
			this._MOONs = new EntitySet<MOON>(new Action<MOON>(this.attach_MOONs), new Action<MOON>(this.detach_MOONs));
			this._RECONNAISSANCEs = new EntitySet<RECONNAISSANCE>(new Action<RECONNAISSANCE>(this.attach_RECONNAISSANCEs), new Action<RECONNAISSANCE>(this.detach_RECONNAISSANCEs));
			this._SIMULATIONs = new EntitySet<SIMULATION>(new Action<SIMULATION>(this.attach_SIMULATIONs), new Action<SIMULATION>(this.detach_SIMULATIONs));
			this._GALAXY = default(EntityRef<GALAXY>);
			this._DISCOVER = default(EntityRef<DISCOVER>);
			this._STAR = default(EntityRef<STAR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Planet", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Planet
		{
			get
			{
				return this._ID_Planet;
			}
			set
			{
				if ((this._ID_Planet != value))
				{
					this.OnID_PlanetChanging(value);
					this.SendPropertyChanging();
					this._ID_Planet = value;
					this.SendPropertyChanged("ID_Planet");
					this.OnID_PlanetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Planet_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Planet_Name
		{
			get
			{
				return this._Planet_Name;
			}
			set
			{
				if ((this._Planet_Name != value))
				{
					this.OnPlanet_NameChanging(value);
					this.SendPropertyChanging();
					this._Planet_Name = value;
					this.SendPropertyChanged("Planet_Name");
					this.OnPlanet_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance_From_Earth_Mantissa", DbType="Decimal(10,0) NOT NULL")]
		public decimal Distance_From_Earth_Mantissa
		{
			get
			{
				return this._Distance_From_Earth_Mantissa;
			}
			set
			{
				if ((this._Distance_From_Earth_Mantissa != value))
				{
					this.OnDistance_From_Earth_MantissaChanging(value);
					this.SendPropertyChanging();
					this._Distance_From_Earth_Mantissa = value;
					this.SendPropertyChanged("Distance_From_Earth_Mantissa");
					this.OnDistance_From_Earth_MantissaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance_From_Earth_Exp", DbType="Decimal(3,0) NOT NULL")]
		public decimal Distance_From_Earth_Exp
		{
			get
			{
				return this._Distance_From_Earth_Exp;
			}
			set
			{
				if ((this._Distance_From_Earth_Exp != value))
				{
					this.OnDistance_From_Earth_ExpChanging(value);
					this.SendPropertyChanging();
					this._Distance_From_Earth_Exp = value;
					this.SendPropertyChanged("Distance_From_Earth_Exp");
					this.OnDistance_From_Earth_ExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radius", DbType="Decimal(15,0) NOT NULL")]
		public decimal Radius
		{
			get
			{
				return this._Radius;
			}
			set
			{
				if ((this._Radius != value))
				{
					this.OnRadiusChanging(value);
					this.SendPropertyChanging();
					this._Radius = value;
					this.SendPropertyChanged("Radius");
					this.OnRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mass_Mantissa", DbType="Decimal(10,0) NOT NULL")]
		public decimal Mass_Mantissa
		{
			get
			{
				return this._Mass_Mantissa;
			}
			set
			{
				if ((this._Mass_Mantissa != value))
				{
					this.OnMass_MantissaChanging(value);
					this.SendPropertyChanging();
					this._Mass_Mantissa = value;
					this.SendPropertyChanged("Mass_Mantissa");
					this.OnMass_MantissaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mass_Exp", DbType="Decimal(3,0) NOT NULL")]
		public decimal Mass_Exp
		{
			get
			{
				return this._Mass_Exp;
			}
			set
			{
				if ((this._Mass_Exp != value))
				{
					this.OnMass_ExpChanging(value);
					this.SendPropertyChanging();
					this._Mass_Exp = value;
					this.SendPropertyChanged("Mass_Exp");
					this.OnMass_ExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Galaxy", DbType="Int NOT NULL")]
		public int ID_Galaxy
		{
			get
			{
				return this._ID_Galaxy;
			}
			set
			{
				if ((this._ID_Galaxy != value))
				{
					if (this._GALAXY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GalaxyChanging(value);
					this.SendPropertyChanging();
					this._ID_Galaxy = value;
					this.SendPropertyChanged("ID_Galaxy");
					this.OnID_GalaxyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mission_D", DbType="Int")]
		public System.Nullable<int> ID_Mission_D
		{
			get
			{
				return this._ID_Mission_D;
			}
			set
			{
				if ((this._ID_Mission_D != value))
				{
					if (this._DISCOVER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_Mission_DChanging(value);
					this.SendPropertyChanging();
					this._ID_Mission_D = value;
					this.SendPropertyChanged("ID_Mission_D");
					this.OnID_Mission_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Star", DbType="Int")]
		public System.Nullable<int> ID_Star
		{
			get
			{
				return this._ID_Star;
			}
			set
			{
				if ((this._ID_Star != value))
				{
					if (this._STAR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_StarChanging(value);
					this.SendPropertyChanging();
					this._ID_Star = value;
					this.SendPropertyChanged("ID_Star");
					this.OnID_StarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PLANET_DELIVER_IN_ORBIT", Storage="_DELIVER_IN_ORBITs", ThisKey="ID_Planet", OtherKey="ID_Planet")]
		public EntitySet<DELIVER_IN_ORBIT> DELIVER_IN_ORBITs
		{
			get
			{
				return this._DELIVER_IN_ORBITs;
			}
			set
			{
				this._DELIVER_IN_ORBITs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PLANET_MOON", Storage="_MOONs", ThisKey="ID_Planet", OtherKey="ID_Planet")]
		public EntitySet<MOON> MOONs
		{
			get
			{
				return this._MOONs;
			}
			set
			{
				this._MOONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PLANET_RECONNAISSANCE", Storage="_RECONNAISSANCEs", ThisKey="ID_Planet", OtherKey="ID_Planet")]
		public EntitySet<RECONNAISSANCE> RECONNAISSANCEs
		{
			get
			{
				return this._RECONNAISSANCEs;
			}
			set
			{
				this._RECONNAISSANCEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PLANET_SIMULATION", Storage="_SIMULATIONs", ThisKey="ID_Planet", OtherKey="ID_Planet")]
		public EntitySet<SIMULATION> SIMULATIONs
		{
			get
			{
				return this._SIMULATIONs;
			}
			set
			{
				this._SIMULATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GALAXY_PLANET", Storage="_GALAXY", ThisKey="ID_Galaxy", OtherKey="ID_Galaxy", IsForeignKey=true)]
		public GALAXY GALAXY
		{
			get
			{
				return this._GALAXY.Entity;
			}
			set
			{
				GALAXY previousValue = this._GALAXY.Entity;
				if (((previousValue != value) 
							|| (this._GALAXY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GALAXY.Entity = null;
						previousValue.PLANETs.Remove(this);
					}
					this._GALAXY.Entity = value;
					if ((value != null))
					{
						value.PLANETs.Add(this);
						this._ID_Galaxy = value.ID_Galaxy;
					}
					else
					{
						this._ID_Galaxy = default(int);
					}
					this.SendPropertyChanged("GALAXY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DISCOVER_PLANET", Storage="_DISCOVER", ThisKey="ID_Mission_D", OtherKey="ID_Mission_D", IsForeignKey=true)]
		public DISCOVER DISCOVER
		{
			get
			{
				return this._DISCOVER.Entity;
			}
			set
			{
				DISCOVER previousValue = this._DISCOVER.Entity;
				if (((previousValue != value) 
							|| (this._DISCOVER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DISCOVER.Entity = null;
						previousValue.PLANETs.Remove(this);
					}
					this._DISCOVER.Entity = value;
					if ((value != null))
					{
						value.PLANETs.Add(this);
						this._ID_Mission_D = value.ID_Mission_D;
					}
					else
					{
						this._ID_Mission_D = default(Nullable<int>);
					}
					this.SendPropertyChanged("DISCOVER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STAR_PLANET", Storage="_STAR", ThisKey="ID_Star", OtherKey="ID_Star", IsForeignKey=true)]
		public STAR STAR
		{
			get
			{
				return this._STAR.Entity;
			}
			set
			{
				STAR previousValue = this._STAR.Entity;
				if (((previousValue != value) 
							|| (this._STAR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STAR.Entity = null;
						previousValue.PLANETs.Remove(this);
					}
					this._STAR.Entity = value;
					if ((value != null))
					{
						value.PLANETs.Add(this);
						this._ID_Star = value.ID_Star;
					}
					else
					{
						this._ID_Star = default(Nullable<int>);
					}
					this.SendPropertyChanged("STAR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DELIVER_IN_ORBITs(DELIVER_IN_ORBIT entity)
		{
			this.SendPropertyChanging();
			entity.PLANET = this;
		}
		
		private void detach_DELIVER_IN_ORBITs(DELIVER_IN_ORBIT entity)
		{
			this.SendPropertyChanging();
			entity.PLANET = null;
		}
		
		private void attach_MOONs(MOON entity)
		{
			this.SendPropertyChanging();
			entity.PLANET = this;
		}
		
		private void detach_MOONs(MOON entity)
		{
			this.SendPropertyChanging();
			entity.PLANET = null;
		}
		
		private void attach_RECONNAISSANCEs(RECONNAISSANCE entity)
		{
			this.SendPropertyChanging();
			entity.PLANET = this;
		}
		
		private void detach_RECONNAISSANCEs(RECONNAISSANCE entity)
		{
			this.SendPropertyChanging();
			entity.PLANET = null;
		}
		
		private void attach_SIMULATIONs(SIMULATION entity)
		{
			this.SendPropertyChanging();
			entity.PLANET = this;
		}
		
		private void detach_SIMULATIONs(SIMULATION entity)
		{
			this.SendPropertyChanging();
			entity.PLANET = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RECONNAISSANCE")]
	public partial class RECONNAISSANCE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Mission_R;
		
		private string _Mission_R_Name;
		
		private string _Mission_R_Description;
		
		private System.DateTime _Begin_Date;
		
		private int _ID_Launch_Site;
		
		private System.Nullable<int> _ID_Robot;
		
		private System.Nullable<System.DateTime> _End_Date;
		
		private System.Nullable<int> _ID_Spacecraft;
		
		private System.Nullable<int> _ID_Space_Station;
		
		private int _ID_Team;
		
		private System.Nullable<int> _ID_Planet;
		
		private System.Nullable<int> _ID_Moon;
		
		private EntitySet<PARTICIPATION> _PARTICIPATIONs;
		
		private EntityRef<LAUNCH_SITE> _LAUNCH_SITE;
		
		private EntityRef<MOON> _MOON;
		
		private EntityRef<PLANET> _PLANET;
		
		private EntityRef<ROBOT> _ROBOT;
		
		private EntityRef<SPACE_STATION> _SPACE_STATION;
		
		private EntityRef<SPACECRAFT> _SPACECRAFT;
		
		private EntityRef<TEAM> _TEAM;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Mission_RChanging(int value);
    partial void OnID_Mission_RChanged();
    partial void OnMission_R_NameChanging(string value);
    partial void OnMission_R_NameChanged();
    partial void OnMission_R_DescriptionChanging(string value);
    partial void OnMission_R_DescriptionChanged();
    partial void OnBegin_DateChanging(System.DateTime value);
    partial void OnBegin_DateChanged();
    partial void OnID_Launch_SiteChanging(int value);
    partial void OnID_Launch_SiteChanged();
    partial void OnID_RobotChanging(System.Nullable<int> value);
    partial void OnID_RobotChanged();
    partial void OnEnd_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnd_DateChanged();
    partial void OnID_SpacecraftChanging(System.Nullable<int> value);
    partial void OnID_SpacecraftChanged();
    partial void OnID_Space_StationChanging(System.Nullable<int> value);
    partial void OnID_Space_StationChanged();
    partial void OnID_TeamChanging(int value);
    partial void OnID_TeamChanged();
    partial void OnID_PlanetChanging(System.Nullable<int> value);
    partial void OnID_PlanetChanged();
    partial void OnID_MoonChanging(System.Nullable<int> value);
    partial void OnID_MoonChanged();
    #endregion
		
		public RECONNAISSANCE()
		{
			this._PARTICIPATIONs = new EntitySet<PARTICIPATION>(new Action<PARTICIPATION>(this.attach_PARTICIPATIONs), new Action<PARTICIPATION>(this.detach_PARTICIPATIONs));
			this._LAUNCH_SITE = default(EntityRef<LAUNCH_SITE>);
			this._MOON = default(EntityRef<MOON>);
			this._PLANET = default(EntityRef<PLANET>);
			this._ROBOT = default(EntityRef<ROBOT>);
			this._SPACE_STATION = default(EntityRef<SPACE_STATION>);
			this._SPACECRAFT = default(EntityRef<SPACECRAFT>);
			this._TEAM = default(EntityRef<TEAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mission_R", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Mission_R
		{
			get
			{
				return this._ID_Mission_R;
			}
			set
			{
				if ((this._ID_Mission_R != value))
				{
					this.OnID_Mission_RChanging(value);
					this.SendPropertyChanging();
					this._ID_Mission_R = value;
					this.SendPropertyChanged("ID_Mission_R");
					this.OnID_Mission_RChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mission_R_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Mission_R_Name
		{
			get
			{
				return this._Mission_R_Name;
			}
			set
			{
				if ((this._Mission_R_Name != value))
				{
					this.OnMission_R_NameChanging(value);
					this.SendPropertyChanging();
					this._Mission_R_Name = value;
					this.SendPropertyChanged("Mission_R_Name");
					this.OnMission_R_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mission_R_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Mission_R_Description
		{
			get
			{
				return this._Mission_R_Description;
			}
			set
			{
				if ((this._Mission_R_Description != value))
				{
					this.OnMission_R_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Mission_R_Description = value;
					this.SendPropertyChanged("Mission_R_Description");
					this.OnMission_R_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Begin_Date", DbType="Date NOT NULL")]
		public System.DateTime Begin_Date
		{
			get
			{
				return this._Begin_Date;
			}
			set
			{
				if ((this._Begin_Date != value))
				{
					this.OnBegin_DateChanging(value);
					this.SendPropertyChanging();
					this._Begin_Date = value;
					this.SendPropertyChanged("Begin_Date");
					this.OnBegin_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Launch_Site", DbType="Int NOT NULL")]
		public int ID_Launch_Site
		{
			get
			{
				return this._ID_Launch_Site;
			}
			set
			{
				if ((this._ID_Launch_Site != value))
				{
					if (this._LAUNCH_SITE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_Launch_SiteChanging(value);
					this.SendPropertyChanging();
					this._ID_Launch_Site = value;
					this.SendPropertyChanged("ID_Launch_Site");
					this.OnID_Launch_SiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Robot", DbType="Int")]
		public System.Nullable<int> ID_Robot
		{
			get
			{
				return this._ID_Robot;
			}
			set
			{
				if ((this._ID_Robot != value))
				{
					if (this._ROBOT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_RobotChanging(value);
					this.SendPropertyChanging();
					this._ID_Robot = value;
					this.SendPropertyChanged("ID_Robot");
					this.OnID_RobotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_End_Date", DbType="Date")]
		public System.Nullable<System.DateTime> End_Date
		{
			get
			{
				return this._End_Date;
			}
			set
			{
				if ((this._End_Date != value))
				{
					this.OnEnd_DateChanging(value);
					this.SendPropertyChanging();
					this._End_Date = value;
					this.SendPropertyChanged("End_Date");
					this.OnEnd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Spacecraft", DbType="Int")]
		public System.Nullable<int> ID_Spacecraft
		{
			get
			{
				return this._ID_Spacecraft;
			}
			set
			{
				if ((this._ID_Spacecraft != value))
				{
					if (this._SPACECRAFT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SpacecraftChanging(value);
					this.SendPropertyChanging();
					this._ID_Spacecraft = value;
					this.SendPropertyChanged("ID_Spacecraft");
					this.OnID_SpacecraftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Space_Station", DbType="Int")]
		public System.Nullable<int> ID_Space_Station
		{
			get
			{
				return this._ID_Space_Station;
			}
			set
			{
				if ((this._ID_Space_Station != value))
				{
					if (this._SPACE_STATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_Space_StationChanging(value);
					this.SendPropertyChanging();
					this._ID_Space_Station = value;
					this.SendPropertyChanged("ID_Space_Station");
					this.OnID_Space_StationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Team", DbType="Int NOT NULL")]
		public int ID_Team
		{
			get
			{
				return this._ID_Team;
			}
			set
			{
				if ((this._ID_Team != value))
				{
					if (this._TEAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TeamChanging(value);
					this.SendPropertyChanging();
					this._ID_Team = value;
					this.SendPropertyChanged("ID_Team");
					this.OnID_TeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Planet", DbType="Int")]
		public System.Nullable<int> ID_Planet
		{
			get
			{
				return this._ID_Planet;
			}
			set
			{
				if ((this._ID_Planet != value))
				{
					if (this._PLANET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PlanetChanging(value);
					this.SendPropertyChanging();
					this._ID_Planet = value;
					this.SendPropertyChanged("ID_Planet");
					this.OnID_PlanetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Moon", DbType="Int")]
		public System.Nullable<int> ID_Moon
		{
			get
			{
				return this._ID_Moon;
			}
			set
			{
				if ((this._ID_Moon != value))
				{
					if (this._MOON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MoonChanging(value);
					this.SendPropertyChanging();
					this._ID_Moon = value;
					this.SendPropertyChanged("ID_Moon");
					this.OnID_MoonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECONNAISSANCE_PARTICIPATION", Storage="_PARTICIPATIONs", ThisKey="ID_Mission_R", OtherKey="ID_Mission_R")]
		public EntitySet<PARTICIPATION> PARTICIPATIONs
		{
			get
			{
				return this._PARTICIPATIONs;
			}
			set
			{
				this._PARTICIPATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAUNCH_SITE_RECONNAISSANCE", Storage="_LAUNCH_SITE", ThisKey="ID_Launch_Site", OtherKey="ID_Launch_Site", IsForeignKey=true)]
		public LAUNCH_SITE LAUNCH_SITE
		{
			get
			{
				return this._LAUNCH_SITE.Entity;
			}
			set
			{
				LAUNCH_SITE previousValue = this._LAUNCH_SITE.Entity;
				if (((previousValue != value) 
							|| (this._LAUNCH_SITE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAUNCH_SITE.Entity = null;
						previousValue.RECONNAISSANCEs.Remove(this);
					}
					this._LAUNCH_SITE.Entity = value;
					if ((value != null))
					{
						value.RECONNAISSANCEs.Add(this);
						this._ID_Launch_Site = value.ID_Launch_Site;
					}
					else
					{
						this._ID_Launch_Site = default(int);
					}
					this.SendPropertyChanged("LAUNCH_SITE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MOON_RECONNAISSANCE", Storage="_MOON", ThisKey="ID_Moon", OtherKey="ID_Moon", IsForeignKey=true)]
		public MOON MOON
		{
			get
			{
				return this._MOON.Entity;
			}
			set
			{
				MOON previousValue = this._MOON.Entity;
				if (((previousValue != value) 
							|| (this._MOON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MOON.Entity = null;
						previousValue.RECONNAISSANCEs.Remove(this);
					}
					this._MOON.Entity = value;
					if ((value != null))
					{
						value.RECONNAISSANCEs.Add(this);
						this._ID_Moon = value.ID_Moon;
					}
					else
					{
						this._ID_Moon = default(Nullable<int>);
					}
					this.SendPropertyChanged("MOON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PLANET_RECONNAISSANCE", Storage="_PLANET", ThisKey="ID_Planet", OtherKey="ID_Planet", IsForeignKey=true)]
		public PLANET PLANET
		{
			get
			{
				return this._PLANET.Entity;
			}
			set
			{
				PLANET previousValue = this._PLANET.Entity;
				if (((previousValue != value) 
							|| (this._PLANET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PLANET.Entity = null;
						previousValue.RECONNAISSANCEs.Remove(this);
					}
					this._PLANET.Entity = value;
					if ((value != null))
					{
						value.RECONNAISSANCEs.Add(this);
						this._ID_Planet = value.ID_Planet;
					}
					else
					{
						this._ID_Planet = default(Nullable<int>);
					}
					this.SendPropertyChanged("PLANET");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROBOT_RECONNAISSANCE", Storage="_ROBOT", ThisKey="ID_Robot", OtherKey="ID_Robot", IsForeignKey=true)]
		public ROBOT ROBOT
		{
			get
			{
				return this._ROBOT.Entity;
			}
			set
			{
				ROBOT previousValue = this._ROBOT.Entity;
				if (((previousValue != value) 
							|| (this._ROBOT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ROBOT.Entity = null;
						previousValue.RECONNAISSANCEs.Remove(this);
					}
					this._ROBOT.Entity = value;
					if ((value != null))
					{
						value.RECONNAISSANCEs.Add(this);
						this._ID_Robot = value.ID_Robot;
					}
					else
					{
						this._ID_Robot = default(Nullable<int>);
					}
					this.SendPropertyChanged("ROBOT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPACE_STATION_RECONNAISSANCE", Storage="_SPACE_STATION", ThisKey="ID_Space_Station", OtherKey="ID_Space_Station", IsForeignKey=true)]
		public SPACE_STATION SPACE_STATION
		{
			get
			{
				return this._SPACE_STATION.Entity;
			}
			set
			{
				SPACE_STATION previousValue = this._SPACE_STATION.Entity;
				if (((previousValue != value) 
							|| (this._SPACE_STATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SPACE_STATION.Entity = null;
						previousValue.RECONNAISSANCEs.Remove(this);
					}
					this._SPACE_STATION.Entity = value;
					if ((value != null))
					{
						value.RECONNAISSANCEs.Add(this);
						this._ID_Space_Station = value.ID_Space_Station;
					}
					else
					{
						this._ID_Space_Station = default(Nullable<int>);
					}
					this.SendPropertyChanged("SPACE_STATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPACECRAFT_RECONNAISSANCE", Storage="_SPACECRAFT", ThisKey="ID_Spacecraft", OtherKey="ID_Spacecraft", IsForeignKey=true)]
		public SPACECRAFT SPACECRAFT
		{
			get
			{
				return this._SPACECRAFT.Entity;
			}
			set
			{
				SPACECRAFT previousValue = this._SPACECRAFT.Entity;
				if (((previousValue != value) 
							|| (this._SPACECRAFT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SPACECRAFT.Entity = null;
						previousValue.RECONNAISSANCEs.Remove(this);
					}
					this._SPACECRAFT.Entity = value;
					if ((value != null))
					{
						value.RECONNAISSANCEs.Add(this);
						this._ID_Spacecraft = value.ID_Spacecraft;
					}
					else
					{
						this._ID_Spacecraft = default(Nullable<int>);
					}
					this.SendPropertyChanged("SPACECRAFT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TEAM_RECONNAISSANCE", Storage="_TEAM", ThisKey="ID_Team", OtherKey="ID_Team", IsForeignKey=true)]
		public TEAM TEAM
		{
			get
			{
				return this._TEAM.Entity;
			}
			set
			{
				TEAM previousValue = this._TEAM.Entity;
				if (((previousValue != value) 
							|| (this._TEAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TEAM.Entity = null;
						previousValue.RECONNAISSANCEs.Remove(this);
					}
					this._TEAM.Entity = value;
					if ((value != null))
					{
						value.RECONNAISSANCEs.Add(this);
						this._ID_Team = value.ID_Team;
					}
					else
					{
						this._ID_Team = default(int);
					}
					this.SendPropertyChanged("TEAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PARTICIPATIONs(PARTICIPATION entity)
		{
			this.SendPropertyChanging();
			entity.RECONNAISSANCE = this;
		}
		
		private void detach_PARTICIPATIONs(PARTICIPATION entity)
		{
			this.SendPropertyChanging();
			entity.RECONNAISSANCE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ROBOT")]
	public partial class ROBOT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Robot;
		
		private string _Robot_Name;
		
		private string _Robot_Description;
		
		private System.Nullable<int> _ID_Rocket;
		
		private EntitySet<RECONNAISSANCE> _RECONNAISSANCEs;
		
		private EntityRef<ROCKET> _ROCKET;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_RobotChanging(int value);
    partial void OnID_RobotChanged();
    partial void OnRobot_NameChanging(string value);
    partial void OnRobot_NameChanged();
    partial void OnRobot_DescriptionChanging(string value);
    partial void OnRobot_DescriptionChanged();
    partial void OnID_RocketChanging(System.Nullable<int> value);
    partial void OnID_RocketChanged();
    #endregion
		
		public ROBOT()
		{
			this._RECONNAISSANCEs = new EntitySet<RECONNAISSANCE>(new Action<RECONNAISSANCE>(this.attach_RECONNAISSANCEs), new Action<RECONNAISSANCE>(this.detach_RECONNAISSANCEs));
			this._ROCKET = default(EntityRef<ROCKET>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Robot", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Robot
		{
			get
			{
				return this._ID_Robot;
			}
			set
			{
				if ((this._ID_Robot != value))
				{
					this.OnID_RobotChanging(value);
					this.SendPropertyChanging();
					this._ID_Robot = value;
					this.SendPropertyChanged("ID_Robot");
					this.OnID_RobotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Robot_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Robot_Name
		{
			get
			{
				return this._Robot_Name;
			}
			set
			{
				if ((this._Robot_Name != value))
				{
					this.OnRobot_NameChanging(value);
					this.SendPropertyChanging();
					this._Robot_Name = value;
					this.SendPropertyChanged("Robot_Name");
					this.OnRobot_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Robot_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Robot_Description
		{
			get
			{
				return this._Robot_Description;
			}
			set
			{
				if ((this._Robot_Description != value))
				{
					this.OnRobot_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Robot_Description = value;
					this.SendPropertyChanged("Robot_Description");
					this.OnRobot_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Rocket", DbType="Int")]
		public System.Nullable<int> ID_Rocket
		{
			get
			{
				return this._ID_Rocket;
			}
			set
			{
				if ((this._ID_Rocket != value))
				{
					if (this._ROCKET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_RocketChanging(value);
					this.SendPropertyChanging();
					this._ID_Rocket = value;
					this.SendPropertyChanged("ID_Rocket");
					this.OnID_RocketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROBOT_RECONNAISSANCE", Storage="_RECONNAISSANCEs", ThisKey="ID_Robot", OtherKey="ID_Robot")]
		public EntitySet<RECONNAISSANCE> RECONNAISSANCEs
		{
			get
			{
				return this._RECONNAISSANCEs;
			}
			set
			{
				this._RECONNAISSANCEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROCKET_ROBOT", Storage="_ROCKET", ThisKey="ID_Rocket", OtherKey="ID_Rocket", IsForeignKey=true)]
		public ROCKET ROCKET
		{
			get
			{
				return this._ROCKET.Entity;
			}
			set
			{
				ROCKET previousValue = this._ROCKET.Entity;
				if (((previousValue != value) 
							|| (this._ROCKET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ROCKET.Entity = null;
						previousValue.ROBOTs.Remove(this);
					}
					this._ROCKET.Entity = value;
					if ((value != null))
					{
						value.ROBOTs.Add(this);
						this._ID_Rocket = value.ID_Rocket;
					}
					else
					{
						this._ID_Rocket = default(Nullable<int>);
					}
					this.SendPropertyChanged("ROCKET");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RECONNAISSANCEs(RECONNAISSANCE entity)
		{
			this.SendPropertyChanging();
			entity.ROBOT = this;
		}
		
		private void detach_RECONNAISSANCEs(RECONNAISSANCE entity)
		{
			this.SendPropertyChanging();
			entity.ROBOT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ROCKET")]
	public partial class ROCKET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Rocket;
		
		private string _Roket_Name;
		
		private System.DateTime _Build_Date;
		
		private int _ID_Hangar;
		
		private EntitySet<ROBOT> _ROBOTs;
		
		private EntitySet<SATELLITE> _SATELLITEs;
		
		private EntityRef<HANGAR> _HANGAR;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_RocketChanging(int value);
    partial void OnID_RocketChanged();
    partial void OnRoket_NameChanging(string value);
    partial void OnRoket_NameChanged();
    partial void OnBuild_DateChanging(System.DateTime value);
    partial void OnBuild_DateChanged();
    partial void OnID_HangarChanging(int value);
    partial void OnID_HangarChanged();
    #endregion
		
		public ROCKET()
		{
			this._ROBOTs = new EntitySet<ROBOT>(new Action<ROBOT>(this.attach_ROBOTs), new Action<ROBOT>(this.detach_ROBOTs));
			this._SATELLITEs = new EntitySet<SATELLITE>(new Action<SATELLITE>(this.attach_SATELLITEs), new Action<SATELLITE>(this.detach_SATELLITEs));
			this._HANGAR = default(EntityRef<HANGAR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Rocket", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Rocket
		{
			get
			{
				return this._ID_Rocket;
			}
			set
			{
				if ((this._ID_Rocket != value))
				{
					this.OnID_RocketChanging(value);
					this.SendPropertyChanging();
					this._ID_Rocket = value;
					this.SendPropertyChanged("ID_Rocket");
					this.OnID_RocketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roket_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Roket_Name
		{
			get
			{
				return this._Roket_Name;
			}
			set
			{
				if ((this._Roket_Name != value))
				{
					this.OnRoket_NameChanging(value);
					this.SendPropertyChanging();
					this._Roket_Name = value;
					this.SendPropertyChanged("Roket_Name");
					this.OnRoket_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Build_Date", DbType="Date NOT NULL")]
		public System.DateTime Build_Date
		{
			get
			{
				return this._Build_Date;
			}
			set
			{
				if ((this._Build_Date != value))
				{
					this.OnBuild_DateChanging(value);
					this.SendPropertyChanging();
					this._Build_Date = value;
					this.SendPropertyChanged("Build_Date");
					this.OnBuild_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Hangar", DbType="Int NOT NULL")]
		public int ID_Hangar
		{
			get
			{
				return this._ID_Hangar;
			}
			set
			{
				if ((this._ID_Hangar != value))
				{
					if (this._HANGAR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HangarChanging(value);
					this.SendPropertyChanging();
					this._ID_Hangar = value;
					this.SendPropertyChanged("ID_Hangar");
					this.OnID_HangarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROCKET_ROBOT", Storage="_ROBOTs", ThisKey="ID_Rocket", OtherKey="ID_Rocket")]
		public EntitySet<ROBOT> ROBOTs
		{
			get
			{
				return this._ROBOTs;
			}
			set
			{
				this._ROBOTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROCKET_SATELLITE", Storage="_SATELLITEs", ThisKey="ID_Rocket", OtherKey="ID_Rocket")]
		public EntitySet<SATELLITE> SATELLITEs
		{
			get
			{
				return this._SATELLITEs;
			}
			set
			{
				this._SATELLITEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGAR_ROCKET", Storage="_HANGAR", ThisKey="ID_Hangar", OtherKey="ID_Hangar", IsForeignKey=true)]
		public HANGAR HANGAR
		{
			get
			{
				return this._HANGAR.Entity;
			}
			set
			{
				HANGAR previousValue = this._HANGAR.Entity;
				if (((previousValue != value) 
							|| (this._HANGAR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGAR.Entity = null;
						previousValue.ROCKETs.Remove(this);
					}
					this._HANGAR.Entity = value;
					if ((value != null))
					{
						value.ROCKETs.Add(this);
						this._ID_Hangar = value.ID_Hangar;
					}
					else
					{
						this._ID_Hangar = default(int);
					}
					this.SendPropertyChanged("HANGAR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ROBOTs(ROBOT entity)
		{
			this.SendPropertyChanging();
			entity.ROCKET = this;
		}
		
		private void detach_ROBOTs(ROBOT entity)
		{
			this.SendPropertyChanging();
			entity.ROCKET = null;
		}
		
		private void attach_SATELLITEs(SATELLITE entity)
		{
			this.SendPropertyChanging();
			entity.ROCKET = this;
		}
		
		private void detach_SATELLITEs(SATELLITE entity)
		{
			this.SendPropertyChanging();
			entity.ROCKET = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SATELLITE")]
	public partial class SATELLITE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Satellite;
		
		private string _Satellite_Name;
		
		private System.Nullable<int> _Orbital_Heigth;
		
		private System.DateTime _Build_Date;
		
		private System.Nullable<int> _ID_Rocket;
		
		private int _ID_Hangar;
		
		private EntitySet<DELIVER_IN_ORBIT> _DELIVER_IN_ORBITs;
		
		private EntitySet<DISCOVER> _DISCOVERs;
		
		private EntityRef<HANGAR> _HANGAR;
		
		private EntityRef<ROCKET> _ROCKET;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SatelliteChanging(int value);
    partial void OnID_SatelliteChanged();
    partial void OnSatellite_NameChanging(string value);
    partial void OnSatellite_NameChanged();
    partial void OnOrbital_HeigthChanging(System.Nullable<int> value);
    partial void OnOrbital_HeigthChanged();
    partial void OnBuild_DateChanging(System.DateTime value);
    partial void OnBuild_DateChanged();
    partial void OnID_RocketChanging(System.Nullable<int> value);
    partial void OnID_RocketChanged();
    partial void OnID_HangarChanging(int value);
    partial void OnID_HangarChanged();
    #endregion
		
		public SATELLITE()
		{
			this._DELIVER_IN_ORBITs = new EntitySet<DELIVER_IN_ORBIT>(new Action<DELIVER_IN_ORBIT>(this.attach_DELIVER_IN_ORBITs), new Action<DELIVER_IN_ORBIT>(this.detach_DELIVER_IN_ORBITs));
			this._DISCOVERs = new EntitySet<DISCOVER>(new Action<DISCOVER>(this.attach_DISCOVERs), new Action<DISCOVER>(this.detach_DISCOVERs));
			this._HANGAR = default(EntityRef<HANGAR>);
			this._ROCKET = default(EntityRef<ROCKET>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Satellite", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Satellite
		{
			get
			{
				return this._ID_Satellite;
			}
			set
			{
				if ((this._ID_Satellite != value))
				{
					this.OnID_SatelliteChanging(value);
					this.SendPropertyChanging();
					this._ID_Satellite = value;
					this.SendPropertyChanged("ID_Satellite");
					this.OnID_SatelliteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Satellite_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Satellite_Name
		{
			get
			{
				return this._Satellite_Name;
			}
			set
			{
				if ((this._Satellite_Name != value))
				{
					this.OnSatellite_NameChanging(value);
					this.SendPropertyChanging();
					this._Satellite_Name = value;
					this.SendPropertyChanged("Satellite_Name");
					this.OnSatellite_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orbital_Heigth", DbType="Int")]
		public System.Nullable<int> Orbital_Heigth
		{
			get
			{
				return this._Orbital_Heigth;
			}
			set
			{
				if ((this._Orbital_Heigth != value))
				{
					this.OnOrbital_HeigthChanging(value);
					this.SendPropertyChanging();
					this._Orbital_Heigth = value;
					this.SendPropertyChanged("Orbital_Heigth");
					this.OnOrbital_HeigthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Build_Date", DbType="Date NOT NULL")]
		public System.DateTime Build_Date
		{
			get
			{
				return this._Build_Date;
			}
			set
			{
				if ((this._Build_Date != value))
				{
					this.OnBuild_DateChanging(value);
					this.SendPropertyChanging();
					this._Build_Date = value;
					this.SendPropertyChanged("Build_Date");
					this.OnBuild_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Rocket", DbType="Int")]
		public System.Nullable<int> ID_Rocket
		{
			get
			{
				return this._ID_Rocket;
			}
			set
			{
				if ((this._ID_Rocket != value))
				{
					if (this._ROCKET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_RocketChanging(value);
					this.SendPropertyChanging();
					this._ID_Rocket = value;
					this.SendPropertyChanged("ID_Rocket");
					this.OnID_RocketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Hangar", DbType="Int NOT NULL")]
		public int ID_Hangar
		{
			get
			{
				return this._ID_Hangar;
			}
			set
			{
				if ((this._ID_Hangar != value))
				{
					if (this._HANGAR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HangarChanging(value);
					this.SendPropertyChanging();
					this._ID_Hangar = value;
					this.SendPropertyChanged("ID_Hangar");
					this.OnID_HangarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SATELLITE_DELIVER_IN_ORBIT", Storage="_DELIVER_IN_ORBITs", ThisKey="ID_Satellite", OtherKey="ID_Satellite")]
		public EntitySet<DELIVER_IN_ORBIT> DELIVER_IN_ORBITs
		{
			get
			{
				return this._DELIVER_IN_ORBITs;
			}
			set
			{
				this._DELIVER_IN_ORBITs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SATELLITE_DISCOVER", Storage="_DISCOVERs", ThisKey="ID_Satellite", OtherKey="ID_Satellite")]
		public EntitySet<DISCOVER> DISCOVERs
		{
			get
			{
				return this._DISCOVERs;
			}
			set
			{
				this._DISCOVERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGAR_SATELLITE", Storage="_HANGAR", ThisKey="ID_Hangar", OtherKey="ID_Hangar", IsForeignKey=true)]
		public HANGAR HANGAR
		{
			get
			{
				return this._HANGAR.Entity;
			}
			set
			{
				HANGAR previousValue = this._HANGAR.Entity;
				if (((previousValue != value) 
							|| (this._HANGAR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGAR.Entity = null;
						previousValue.SATELLITEs.Remove(this);
					}
					this._HANGAR.Entity = value;
					if ((value != null))
					{
						value.SATELLITEs.Add(this);
						this._ID_Hangar = value.ID_Hangar;
					}
					else
					{
						this._ID_Hangar = default(int);
					}
					this.SendPropertyChanged("HANGAR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROCKET_SATELLITE", Storage="_ROCKET", ThisKey="ID_Rocket", OtherKey="ID_Rocket", IsForeignKey=true)]
		public ROCKET ROCKET
		{
			get
			{
				return this._ROCKET.Entity;
			}
			set
			{
				ROCKET previousValue = this._ROCKET.Entity;
				if (((previousValue != value) 
							|| (this._ROCKET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ROCKET.Entity = null;
						previousValue.SATELLITEs.Remove(this);
					}
					this._ROCKET.Entity = value;
					if ((value != null))
					{
						value.SATELLITEs.Add(this);
						this._ID_Rocket = value.ID_Rocket;
					}
					else
					{
						this._ID_Rocket = default(Nullable<int>);
					}
					this.SendPropertyChanged("ROCKET");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DELIVER_IN_ORBITs(DELIVER_IN_ORBIT entity)
		{
			this.SendPropertyChanging();
			entity.SATELLITE = this;
		}
		
		private void detach_DELIVER_IN_ORBITs(DELIVER_IN_ORBIT entity)
		{
			this.SendPropertyChanging();
			entity.SATELLITE = null;
		}
		
		private void attach_DISCOVERs(DISCOVER entity)
		{
			this.SendPropertyChanging();
			entity.SATELLITE = this;
		}
		
		private void detach_DISCOVERs(DISCOVER entity)
		{
			this.SendPropertyChanging();
			entity.SATELLITE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIMULATION")]
	public partial class SIMULATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Simulation;
		
		private System.DateTime _Simulation_Date;
		
		private int _Lab_Number;
		
		private string _Simulation_Description;
		
		private int _ID_Team;
		
		private int _ID_Planet;
		
		private EntityRef<PLANET> _PLANET;
		
		private EntityRef<LAB> _LAB;
		
		private EntityRef<TEAM> _TEAM;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SimulationChanging(int value);
    partial void OnID_SimulationChanged();
    partial void OnSimulation_DateChanging(System.DateTime value);
    partial void OnSimulation_DateChanged();
    partial void OnLab_NumberChanging(int value);
    partial void OnLab_NumberChanged();
    partial void OnSimulation_DescriptionChanging(string value);
    partial void OnSimulation_DescriptionChanged();
    partial void OnID_TeamChanging(int value);
    partial void OnID_TeamChanged();
    partial void OnID_PlanetChanging(int value);
    partial void OnID_PlanetChanged();
    #endregion
		
		public SIMULATION()
		{
			this._PLANET = default(EntityRef<PLANET>);
			this._LAB = default(EntityRef<LAB>);
			this._TEAM = default(EntityRef<TEAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Simulation", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Simulation
		{
			get
			{
				return this._ID_Simulation;
			}
			set
			{
				if ((this._ID_Simulation != value))
				{
					this.OnID_SimulationChanging(value);
					this.SendPropertyChanging();
					this._ID_Simulation = value;
					this.SendPropertyChanged("ID_Simulation");
					this.OnID_SimulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Simulation_Date", DbType="Date NOT NULL")]
		public System.DateTime Simulation_Date
		{
			get
			{
				return this._Simulation_Date;
			}
			set
			{
				if ((this._Simulation_Date != value))
				{
					this.OnSimulation_DateChanging(value);
					this.SendPropertyChanging();
					this._Simulation_Date = value;
					this.SendPropertyChanged("Simulation_Date");
					this.OnSimulation_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lab_Number", DbType="Int NOT NULL")]
		public int Lab_Number
		{
			get
			{
				return this._Lab_Number;
			}
			set
			{
				if ((this._Lab_Number != value))
				{
					if (this._LAB.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLab_NumberChanging(value);
					this.SendPropertyChanging();
					this._Lab_Number = value;
					this.SendPropertyChanged("Lab_Number");
					this.OnLab_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Simulation_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Simulation_Description
		{
			get
			{
				return this._Simulation_Description;
			}
			set
			{
				if ((this._Simulation_Description != value))
				{
					this.OnSimulation_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Simulation_Description = value;
					this.SendPropertyChanged("Simulation_Description");
					this.OnSimulation_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Team", DbType="Int NOT NULL")]
		public int ID_Team
		{
			get
			{
				return this._ID_Team;
			}
			set
			{
				if ((this._ID_Team != value))
				{
					if (this._TEAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TeamChanging(value);
					this.SendPropertyChanging();
					this._ID_Team = value;
					this.SendPropertyChanged("ID_Team");
					this.OnID_TeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Planet", DbType="Int NOT NULL")]
		public int ID_Planet
		{
			get
			{
				return this._ID_Planet;
			}
			set
			{
				if ((this._ID_Planet != value))
				{
					if (this._PLANET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PlanetChanging(value);
					this.SendPropertyChanging();
					this._ID_Planet = value;
					this.SendPropertyChanged("ID_Planet");
					this.OnID_PlanetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PLANET_SIMULATION", Storage="_PLANET", ThisKey="ID_Planet", OtherKey="ID_Planet", IsForeignKey=true)]
		public PLANET PLANET
		{
			get
			{
				return this._PLANET.Entity;
			}
			set
			{
				PLANET previousValue = this._PLANET.Entity;
				if (((previousValue != value) 
							|| (this._PLANET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PLANET.Entity = null;
						previousValue.SIMULATIONs.Remove(this);
					}
					this._PLANET.Entity = value;
					if ((value != null))
					{
						value.SIMULATIONs.Add(this);
						this._ID_Planet = value.ID_Planet;
					}
					else
					{
						this._ID_Planet = default(int);
					}
					this.SendPropertyChanged("PLANET");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAB_SIMULATION", Storage="_LAB", ThisKey="Lab_Number", OtherKey="Lab_Number", IsForeignKey=true)]
		public LAB LAB
		{
			get
			{
				return this._LAB.Entity;
			}
			set
			{
				LAB previousValue = this._LAB.Entity;
				if (((previousValue != value) 
							|| (this._LAB.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAB.Entity = null;
						previousValue.SIMULATIONs.Remove(this);
					}
					this._LAB.Entity = value;
					if ((value != null))
					{
						value.SIMULATIONs.Add(this);
						this._Lab_Number = value.Lab_Number;
					}
					else
					{
						this._Lab_Number = default(int);
					}
					this.SendPropertyChanged("LAB");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TEAM_SIMULATION", Storage="_TEAM", ThisKey="ID_Team", OtherKey="ID_Team", IsForeignKey=true)]
		public TEAM TEAM
		{
			get
			{
				return this._TEAM.Entity;
			}
			set
			{
				TEAM previousValue = this._TEAM.Entity;
				if (((previousValue != value) 
							|| (this._TEAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TEAM.Entity = null;
						previousValue.SIMULATIONs.Remove(this);
					}
					this._TEAM.Entity = value;
					if ((value != null))
					{
						value.SIMULATIONs.Add(this);
						this._ID_Team = value.ID_Team;
					}
					else
					{
						this._ID_Team = default(int);
					}
					this.SendPropertyChanged("TEAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPACE_STATION")]
	public partial class SPACE_STATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Space_Station;
		
		private string _Space_Station_Name;
		
		private decimal _Orbital_Heigth;
		
		private EntitySet<DELIVER_IN_ORBIT> _DELIVER_IN_ORBITs;
		
		private EntitySet<DISCOVER> _DISCOVERs;
		
		private EntitySet<RECONNAISSANCE> _RECONNAISSANCEs;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_Space_StationChanging(int value);
    partial void OnID_Space_StationChanged();
    partial void OnSpace_Station_NameChanging(string value);
    partial void OnSpace_Station_NameChanged();
    partial void OnOrbital_HeigthChanging(decimal value);
    partial void OnOrbital_HeigthChanged();
    #endregion
		
		public SPACE_STATION()
		{
			this._DELIVER_IN_ORBITs = new EntitySet<DELIVER_IN_ORBIT>(new Action<DELIVER_IN_ORBIT>(this.attach_DELIVER_IN_ORBITs), new Action<DELIVER_IN_ORBIT>(this.detach_DELIVER_IN_ORBITs));
			this._DISCOVERs = new EntitySet<DISCOVER>(new Action<DISCOVER>(this.attach_DISCOVERs), new Action<DISCOVER>(this.detach_DISCOVERs));
			this._RECONNAISSANCEs = new EntitySet<RECONNAISSANCE>(new Action<RECONNAISSANCE>(this.attach_RECONNAISSANCEs), new Action<RECONNAISSANCE>(this.detach_RECONNAISSANCEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Space_Station", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Space_Station
		{
			get
			{
				return this._ID_Space_Station;
			}
			set
			{
				if ((this._ID_Space_Station != value))
				{
					this.OnID_Space_StationChanging(value);
					this.SendPropertyChanging();
					this._ID_Space_Station = value;
					this.SendPropertyChanged("ID_Space_Station");
					this.OnID_Space_StationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Space_Station_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Space_Station_Name
		{
			get
			{
				return this._Space_Station_Name;
			}
			set
			{
				if ((this._Space_Station_Name != value))
				{
					this.OnSpace_Station_NameChanging(value);
					this.SendPropertyChanging();
					this._Space_Station_Name = value;
					this.SendPropertyChanged("Space_Station_Name");
					this.OnSpace_Station_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orbital_Heigth", DbType="Decimal(5,0) NOT NULL")]
		public decimal Orbital_Heigth
		{
			get
			{
				return this._Orbital_Heigth;
			}
			set
			{
				if ((this._Orbital_Heigth != value))
				{
					this.OnOrbital_HeigthChanging(value);
					this.SendPropertyChanging();
					this._Orbital_Heigth = value;
					this.SendPropertyChanged("Orbital_Heigth");
					this.OnOrbital_HeigthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPACE_STATION_DELIVER_IN_ORBIT", Storage="_DELIVER_IN_ORBITs", ThisKey="ID_Space_Station", OtherKey="ID_Space_Station")]
		public EntitySet<DELIVER_IN_ORBIT> DELIVER_IN_ORBITs
		{
			get
			{
				return this._DELIVER_IN_ORBITs;
			}
			set
			{
				this._DELIVER_IN_ORBITs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPACE_STATION_DISCOVER", Storage="_DISCOVERs", ThisKey="ID_Space_Station", OtherKey="ID_Space_Station")]
		public EntitySet<DISCOVER> DISCOVERs
		{
			get
			{
				return this._DISCOVERs;
			}
			set
			{
				this._DISCOVERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPACE_STATION_RECONNAISSANCE", Storage="_RECONNAISSANCEs", ThisKey="ID_Space_Station", OtherKey="ID_Space_Station")]
		public EntitySet<RECONNAISSANCE> RECONNAISSANCEs
		{
			get
			{
				return this._RECONNAISSANCEs;
			}
			set
			{
				this._RECONNAISSANCEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DELIVER_IN_ORBITs(DELIVER_IN_ORBIT entity)
		{
			this.SendPropertyChanging();
			entity.SPACE_STATION = this;
		}
		
		private void detach_DELIVER_IN_ORBITs(DELIVER_IN_ORBIT entity)
		{
			this.SendPropertyChanging();
			entity.SPACE_STATION = null;
		}
		
		private void attach_DISCOVERs(DISCOVER entity)
		{
			this.SendPropertyChanging();
			entity.SPACE_STATION = this;
		}
		
		private void detach_DISCOVERs(DISCOVER entity)
		{
			this.SendPropertyChanging();
			entity.SPACE_STATION = null;
		}
		
		private void attach_RECONNAISSANCEs(RECONNAISSANCE entity)
		{
			this.SendPropertyChanging();
			entity.SPACE_STATION = this;
		}
		
		private void detach_RECONNAISSANCEs(RECONNAISSANCE entity)
		{
			this.SendPropertyChanging();
			entity.SPACE_STATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPACECRAFT")]
	public partial class SPACECRAFT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Spacecraft;
		
		private string _Spacecraft_Name;
		
		private string _Spacecraft_Description;
		
		private EntitySet<RECONNAISSANCE> _RECONNAISSANCEs;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SpacecraftChanging(int value);
    partial void OnID_SpacecraftChanged();
    partial void OnSpacecraft_NameChanging(string value);
    partial void OnSpacecraft_NameChanged();
    partial void OnSpacecraft_DescriptionChanging(string value);
    partial void OnSpacecraft_DescriptionChanged();
    #endregion
		
		public SPACECRAFT()
		{
			this._RECONNAISSANCEs = new EntitySet<RECONNAISSANCE>(new Action<RECONNAISSANCE>(this.attach_RECONNAISSANCEs), new Action<RECONNAISSANCE>(this.detach_RECONNAISSANCEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Spacecraft", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Spacecraft
		{
			get
			{
				return this._ID_Spacecraft;
			}
			set
			{
				if ((this._ID_Spacecraft != value))
				{
					this.OnID_SpacecraftChanging(value);
					this.SendPropertyChanging();
					this._ID_Spacecraft = value;
					this.SendPropertyChanged("ID_Spacecraft");
					this.OnID_SpacecraftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spacecraft_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Spacecraft_Name
		{
			get
			{
				return this._Spacecraft_Name;
			}
			set
			{
				if ((this._Spacecraft_Name != value))
				{
					this.OnSpacecraft_NameChanging(value);
					this.SendPropertyChanging();
					this._Spacecraft_Name = value;
					this.SendPropertyChanged("Spacecraft_Name");
					this.OnSpacecraft_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spacecraft_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Spacecraft_Description
		{
			get
			{
				return this._Spacecraft_Description;
			}
			set
			{
				if ((this._Spacecraft_Description != value))
				{
					this.OnSpacecraft_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Spacecraft_Description = value;
					this.SendPropertyChanged("Spacecraft_Description");
					this.OnSpacecraft_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPACECRAFT_RECONNAISSANCE", Storage="_RECONNAISSANCEs", ThisKey="ID_Spacecraft", OtherKey="ID_Spacecraft")]
		public EntitySet<RECONNAISSANCE> RECONNAISSANCEs
		{
			get
			{
				return this._RECONNAISSANCEs;
			}
			set
			{
				this._RECONNAISSANCEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RECONNAISSANCEs(RECONNAISSANCE entity)
		{
			this.SendPropertyChanging();
			entity.SPACECRAFT = this;
		}
		
		private void detach_RECONNAISSANCEs(RECONNAISSANCE entity)
		{
			this.SendPropertyChanging();
			entity.SPACECRAFT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STAR")]
	public partial class STAR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Star;
		
		private string _Star_Name;
		
		private decimal _Distance_From_Earth_Mantissa;
		
		private decimal _Distance_From_Earth_Exp;
		
		private decimal _Radius;
		
		private decimal _Solar_Mass_Mantissa;
		
		private decimal _Solar_Mass_Exp;
		
		private System.Nullable<int> _ID_Constellation;
		
		private int _ID_Galaxy;
		
		private System.Nullable<int> _ID_Mission_D;
		
		private EntitySet<PLANET> _PLANETs;
		
		private EntityRef<GALAXY> _GALAXY;
		
		private EntityRef<CONSTELLATION> _CONSTELLATION;
		
		private EntityRef<DISCOVER> _DISCOVER;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_StarChanging(int value);
    partial void OnID_StarChanged();
    partial void OnStar_NameChanging(string value);
    partial void OnStar_NameChanged();
    partial void OnDistance_From_Earth_MantissaChanging(decimal value);
    partial void OnDistance_From_Earth_MantissaChanged();
    partial void OnDistance_From_Earth_ExpChanging(decimal value);
    partial void OnDistance_From_Earth_ExpChanged();
    partial void OnRadiusChanging(decimal value);
    partial void OnRadiusChanged();
    partial void OnSolar_Mass_MantissaChanging(decimal value);
    partial void OnSolar_Mass_MantissaChanged();
    partial void OnSolar_Mass_ExpChanging(decimal value);
    partial void OnSolar_Mass_ExpChanged();
    partial void OnID_ConstellationChanging(System.Nullable<int> value);
    partial void OnID_ConstellationChanged();
    partial void OnID_GalaxyChanging(int value);
    partial void OnID_GalaxyChanged();
    partial void OnID_Mission_DChanging(System.Nullable<int> value);
    partial void OnID_Mission_DChanged();
    #endregion
		
		public STAR()
		{
			this._PLANETs = new EntitySet<PLANET>(new Action<PLANET>(this.attach_PLANETs), new Action<PLANET>(this.detach_PLANETs));
			this._GALAXY = default(EntityRef<GALAXY>);
			this._CONSTELLATION = default(EntityRef<CONSTELLATION>);
			this._DISCOVER = default(EntityRef<DISCOVER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Star", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Star
		{
			get
			{
				return this._ID_Star;
			}
			set
			{
				if ((this._ID_Star != value))
				{
					this.OnID_StarChanging(value);
					this.SendPropertyChanging();
					this._ID_Star = value;
					this.SendPropertyChanged("ID_Star");
					this.OnID_StarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Star_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Star_Name
		{
			get
			{
				return this._Star_Name;
			}
			set
			{
				if ((this._Star_Name != value))
				{
					this.OnStar_NameChanging(value);
					this.SendPropertyChanging();
					this._Star_Name = value;
					this.SendPropertyChanged("Star_Name");
					this.OnStar_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance_From_Earth_Mantissa", DbType="Decimal(10,0) NOT NULL")]
		public decimal Distance_From_Earth_Mantissa
		{
			get
			{
				return this._Distance_From_Earth_Mantissa;
			}
			set
			{
				if ((this._Distance_From_Earth_Mantissa != value))
				{
					this.OnDistance_From_Earth_MantissaChanging(value);
					this.SendPropertyChanging();
					this._Distance_From_Earth_Mantissa = value;
					this.SendPropertyChanged("Distance_From_Earth_Mantissa");
					this.OnDistance_From_Earth_MantissaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance_From_Earth_Exp", DbType="Decimal(3,0) NOT NULL")]
		public decimal Distance_From_Earth_Exp
		{
			get
			{
				return this._Distance_From_Earth_Exp;
			}
			set
			{
				if ((this._Distance_From_Earth_Exp != value))
				{
					this.OnDistance_From_Earth_ExpChanging(value);
					this.SendPropertyChanging();
					this._Distance_From_Earth_Exp = value;
					this.SendPropertyChanged("Distance_From_Earth_Exp");
					this.OnDistance_From_Earth_ExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radius", DbType="Decimal(15,0) NOT NULL")]
		public decimal Radius
		{
			get
			{
				return this._Radius;
			}
			set
			{
				if ((this._Radius != value))
				{
					this.OnRadiusChanging(value);
					this.SendPropertyChanging();
					this._Radius = value;
					this.SendPropertyChanged("Radius");
					this.OnRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Solar_Mass_Mantissa", DbType="Decimal(10,0) NOT NULL")]
		public decimal Solar_Mass_Mantissa
		{
			get
			{
				return this._Solar_Mass_Mantissa;
			}
			set
			{
				if ((this._Solar_Mass_Mantissa != value))
				{
					this.OnSolar_Mass_MantissaChanging(value);
					this.SendPropertyChanging();
					this._Solar_Mass_Mantissa = value;
					this.SendPropertyChanged("Solar_Mass_Mantissa");
					this.OnSolar_Mass_MantissaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Solar_Mass_Exp", DbType="Decimal(3,0) NOT NULL")]
		public decimal Solar_Mass_Exp
		{
			get
			{
				return this._Solar_Mass_Exp;
			}
			set
			{
				if ((this._Solar_Mass_Exp != value))
				{
					this.OnSolar_Mass_ExpChanging(value);
					this.SendPropertyChanging();
					this._Solar_Mass_Exp = value;
					this.SendPropertyChanged("Solar_Mass_Exp");
					this.OnSolar_Mass_ExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Constellation", DbType="Int")]
		public System.Nullable<int> ID_Constellation
		{
			get
			{
				return this._ID_Constellation;
			}
			set
			{
				if ((this._ID_Constellation != value))
				{
					if (this._CONSTELLATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ConstellationChanging(value);
					this.SendPropertyChanging();
					this._ID_Constellation = value;
					this.SendPropertyChanged("ID_Constellation");
					this.OnID_ConstellationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Galaxy", DbType="Int NOT NULL")]
		public int ID_Galaxy
		{
			get
			{
				return this._ID_Galaxy;
			}
			set
			{
				if ((this._ID_Galaxy != value))
				{
					if (this._GALAXY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GalaxyChanging(value);
					this.SendPropertyChanging();
					this._ID_Galaxy = value;
					this.SendPropertyChanged("ID_Galaxy");
					this.OnID_GalaxyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mission_D", DbType="Int")]
		public System.Nullable<int> ID_Mission_D
		{
			get
			{
				return this._ID_Mission_D;
			}
			set
			{
				if ((this._ID_Mission_D != value))
				{
					if (this._DISCOVER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_Mission_DChanging(value);
					this.SendPropertyChanging();
					this._ID_Mission_D = value;
					this.SendPropertyChanged("ID_Mission_D");
					this.OnID_Mission_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STAR_PLANET", Storage="_PLANETs", ThisKey="ID_Star", OtherKey="ID_Star")]
		public EntitySet<PLANET> PLANETs
		{
			get
			{
				return this._PLANETs;
			}
			set
			{
				this._PLANETs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GALAXY_STAR", Storage="_GALAXY", ThisKey="ID_Galaxy", OtherKey="ID_Galaxy", IsForeignKey=true)]
		public GALAXY GALAXY
		{
			get
			{
				return this._GALAXY.Entity;
			}
			set
			{
				GALAXY previousValue = this._GALAXY.Entity;
				if (((previousValue != value) 
							|| (this._GALAXY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GALAXY.Entity = null;
						previousValue.STARs.Remove(this);
					}
					this._GALAXY.Entity = value;
					if ((value != null))
					{
						value.STARs.Add(this);
						this._ID_Galaxy = value.ID_Galaxy;
					}
					else
					{
						this._ID_Galaxy = default(int);
					}
					this.SendPropertyChanged("GALAXY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONSTELLATION_STAR", Storage="_CONSTELLATION", ThisKey="ID_Constellation", OtherKey="ID_Constellation", IsForeignKey=true)]
		public CONSTELLATION CONSTELLATION
		{
			get
			{
				return this._CONSTELLATION.Entity;
			}
			set
			{
				CONSTELLATION previousValue = this._CONSTELLATION.Entity;
				if (((previousValue != value) 
							|| (this._CONSTELLATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONSTELLATION.Entity = null;
						previousValue.STARs.Remove(this);
					}
					this._CONSTELLATION.Entity = value;
					if ((value != null))
					{
						value.STARs.Add(this);
						this._ID_Constellation = value.ID_Constellation;
					}
					else
					{
						this._ID_Constellation = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONSTELLATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DISCOVER_STAR", Storage="_DISCOVER", ThisKey="ID_Mission_D", OtherKey="ID_Mission_D", IsForeignKey=true)]
		public DISCOVER DISCOVER
		{
			get
			{
				return this._DISCOVER.Entity;
			}
			set
			{
				DISCOVER previousValue = this._DISCOVER.Entity;
				if (((previousValue != value) 
							|| (this._DISCOVER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DISCOVER.Entity = null;
						previousValue.STARs.Remove(this);
					}
					this._DISCOVER.Entity = value;
					if ((value != null))
					{
						value.STARs.Add(this);
						this._ID_Mission_D = value.ID_Mission_D;
					}
					else
					{
						this._ID_Mission_D = default(Nullable<int>);
					}
					this.SendPropertyChanged("DISCOVER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PLANETs(PLANET entity)
		{
			this.SendPropertyChanging();
			entity.STAR = this;
		}
		
		private void detach_PLANETs(PLANET entity)
		{
			this.SendPropertyChanging();
			entity.STAR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEAM")]
	public partial class TEAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Team;
		
		private string _Team_Name;
		
		private int _ID_Responsible;
		
		private EntitySet<DELIVER_IN_ORBIT> _DELIVER_IN_ORBITs;
		
		private EntitySet<DISCOVER> _DISCOVERs;
		
		private EntitySet<MEMBERSHIP> _MEMBERSHIPs;
		
		private EntitySet<RECONNAISSANCE> _RECONNAISSANCEs;
		
		private EntitySet<SIMULATION> _SIMULATIONs;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TeamChanging(int value);
    partial void OnID_TeamChanged();
    partial void OnTeam_NameChanging(string value);
    partial void OnTeam_NameChanged();
    partial void OnID_ResponsibleChanging(int value);
    partial void OnID_ResponsibleChanged();
    #endregion
		
		public TEAM()
		{
			this._DELIVER_IN_ORBITs = new EntitySet<DELIVER_IN_ORBIT>(new Action<DELIVER_IN_ORBIT>(this.attach_DELIVER_IN_ORBITs), new Action<DELIVER_IN_ORBIT>(this.detach_DELIVER_IN_ORBITs));
			this._DISCOVERs = new EntitySet<DISCOVER>(new Action<DISCOVER>(this.attach_DISCOVERs), new Action<DISCOVER>(this.detach_DISCOVERs));
			this._MEMBERSHIPs = new EntitySet<MEMBERSHIP>(new Action<MEMBERSHIP>(this.attach_MEMBERSHIPs), new Action<MEMBERSHIP>(this.detach_MEMBERSHIPs));
			this._RECONNAISSANCEs = new EntitySet<RECONNAISSANCE>(new Action<RECONNAISSANCE>(this.attach_RECONNAISSANCEs), new Action<RECONNAISSANCE>(this.detach_RECONNAISSANCEs));
			this._SIMULATIONs = new EntitySet<SIMULATION>(new Action<SIMULATION>(this.attach_SIMULATIONs), new Action<SIMULATION>(this.detach_SIMULATIONs));
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Team", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Team
		{
			get
			{
				return this._ID_Team;
			}
			set
			{
				if ((this._ID_Team != value))
				{
					this.OnID_TeamChanging(value);
					this.SendPropertyChanging();
					this._ID_Team = value;
					this.SendPropertyChanged("ID_Team");
					this.OnID_TeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team_Name", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Team_Name
		{
			get
			{
				return this._Team_Name;
			}
			set
			{
				if ((this._Team_Name != value))
				{
					this.OnTeam_NameChanging(value);
					this.SendPropertyChanging();
					this._Team_Name = value;
					this.SendPropertyChanged("Team_Name");
					this.OnTeam_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Responsible", DbType="Int NOT NULL")]
		public int ID_Responsible
		{
			get
			{
				return this._ID_Responsible;
			}
			set
			{
				if ((this._ID_Responsible != value))
				{
					if (this._EMPLOYEE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ResponsibleChanging(value);
					this.SendPropertyChanging();
					this._ID_Responsible = value;
					this.SendPropertyChanged("ID_Responsible");
					this.OnID_ResponsibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TEAM_DELIVER_IN_ORBIT", Storage="_DELIVER_IN_ORBITs", ThisKey="ID_Team", OtherKey="ID_Team")]
		public EntitySet<DELIVER_IN_ORBIT> DELIVER_IN_ORBITs
		{
			get
			{
				return this._DELIVER_IN_ORBITs;
			}
			set
			{
				this._DELIVER_IN_ORBITs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TEAM_DISCOVER", Storage="_DISCOVERs", ThisKey="ID_Team", OtherKey="ID_Team")]
		public EntitySet<DISCOVER> DISCOVERs
		{
			get
			{
				return this._DISCOVERs;
			}
			set
			{
				this._DISCOVERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TEAM_MEMBERSHIP", Storage="_MEMBERSHIPs", ThisKey="ID_Team", OtherKey="ID_Team")]
		public EntitySet<MEMBERSHIP> MEMBERSHIPs
		{
			get
			{
				return this._MEMBERSHIPs;
			}
			set
			{
				this._MEMBERSHIPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TEAM_RECONNAISSANCE", Storage="_RECONNAISSANCEs", ThisKey="ID_Team", OtherKey="ID_Team")]
		public EntitySet<RECONNAISSANCE> RECONNAISSANCEs
		{
			get
			{
				return this._RECONNAISSANCEs;
			}
			set
			{
				this._RECONNAISSANCEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TEAM_SIMULATION", Storage="_SIMULATIONs", ThisKey="ID_Team", OtherKey="ID_Team")]
		public EntitySet<SIMULATION> SIMULATIONs
		{
			get
			{
				return this._SIMULATIONs;
			}
			set
			{
				this._SIMULATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_TEAM", Storage="_EMPLOYEE", ThisKey="ID_Responsible", OtherKey="ID_Employee", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.TEAMs.Remove(this);
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.TEAMs.Add(this);
						this._ID_Responsible = value.ID_Employee;
					}
					else
					{
						this._ID_Responsible = default(int);
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DELIVER_IN_ORBITs(DELIVER_IN_ORBIT entity)
		{
			this.SendPropertyChanging();
			entity.TEAM = this;
		}
		
		private void detach_DELIVER_IN_ORBITs(DELIVER_IN_ORBIT entity)
		{
			this.SendPropertyChanging();
			entity.TEAM = null;
		}
		
		private void attach_DISCOVERs(DISCOVER entity)
		{
			this.SendPropertyChanging();
			entity.TEAM = this;
		}
		
		private void detach_DISCOVERs(DISCOVER entity)
		{
			this.SendPropertyChanging();
			entity.TEAM = null;
		}
		
		private void attach_MEMBERSHIPs(MEMBERSHIP entity)
		{
			this.SendPropertyChanging();
			entity.TEAM = this;
		}
		
		private void detach_MEMBERSHIPs(MEMBERSHIP entity)
		{
			this.SendPropertyChanging();
			entity.TEAM = null;
		}
		
		private void attach_RECONNAISSANCEs(RECONNAISSANCE entity)
		{
			this.SendPropertyChanging();
			entity.TEAM = this;
		}
		
		private void detach_RECONNAISSANCEs(RECONNAISSANCE entity)
		{
			this.SendPropertyChanging();
			entity.TEAM = null;
		}
		
		private void attach_SIMULATIONs(SIMULATION entity)
		{
			this.SendPropertyChanging();
			entity.TEAM = this;
		}
		
		private void detach_SIMULATIONs(SIMULATION entity)
		{
			this.SendPropertyChanging();
			entity.TEAM = null;
		}
	}
}
#pragma warning restore 1591
